[{"path":"https://jpharris7.github.io/StreamVAST/articles/model_fitting.html","id":"fitting-a-tinyvast-model-to-stream-network-data","dir":"Articles","previous_headings":"","what":"Fitting a tinyVAST Model to Stream Network Data","title":"Fitting a VAST Model","text":"second chapter explaining use functions StreamVAST package. information prepare format data, please refer previous chapter Preparing Stream Network previous chapter, imported data steelhead salmon redds Mill Creek watershed, Washington State. two important data objects data frame dates locations redds, sf object LINESTRINGS defining different segments network.","code":"head(Mill.data) #>   Year Day Reach    Effort Redds habitat  STRM_NAME  root parent #> 1 2013  64     1 0.7515168     0    TRUE Mill Creek  TRUE     NA #> 2 2013  64     2 1.0667105     0    TRUE Mill Creek FALSE      1 #> 3 2013  64     3 1.0224078     0    TRUE Mill Creek FALSE      2 #> 4 2013  64     4 1.0224078     0    TRUE Mill Creek FALSE      3 #> 5 2013  78     1 0.7515168     0    TRUE Mill Creek  TRUE     NA #> 6 2013  78     2 1.0667105     0    TRUE Mill Creek FALSE      1 print(Mill.reaches,n = 4) #> Simple feature collection with 22 features and 7 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 941970.7 ymin: 322499 xmax: 963147.4 ymax: 357159.5 #> Projected CRS: NAD83 / Washington South (ftUS) #> First 4 features: #>   from to habitat Reach  STRM_NAME root parent                       geometry #> 1    1  2       1     1 Mill Creek    1     NA LINESTRING (963147.4 322499... #> 2    2  3       1     2 Mill Creek    0      1 LINESTRING (961311.9 324437... #> 3    3  4       1     3 Mill Creek    0      2 LINESTRING (958655.6 326211... #> 4    4  5       1     4 Mill Creek    0      3 LINESTRING (958123.2 328790..."},{"path":"https://jpharris7.github.io/StreamVAST/articles/model_fitting.html","id":"additional-formatting-for-tinyvast","dir":"Articles","previous_headings":"Fitting a tinyVAST Model to Stream Network Data","what":"Additional formatting for tinyVAST","title":"Fitting a VAST Model","text":"minor formatting tasks need completed can fit model. need draw information Mill.reaches add “Area” column tracks total area reach, separate “Effort”. date also converted variety formats (statistical week, Month) useful later. objects returned additional formating streamvast class object. object numerous elements gradually filled using additional functions. function also produces map spatial frame data coverage provided surveys can useful diagnostic check.  produce “streamvast” object, list many components. inital data inputs “countdata”, “reachdata”, “surveydata” located . particular note, “reachname” argument. reachname used key unify different components, must consistent across datasets feed process. streamvast class also variety slots reserved model model outputs likely useful later steps.","code":"Mill.vast<-ConstructStreamVAST(countdata = Mill.data,reachdata = Mill.reaches,surveydata = Mill.surveys,reachname = \"Reach\",countname = \"Redds\") #> [1] \"Initializing StreamVAST based on countdata and reachdata\""},{"path":"https://jpharris7.github.io/StreamVAST/articles/model_fitting.html","id":"choosing-a-temporal-resolution","dir":"Articles","previous_headings":"Fitting a tinyVAST Model to Stream Network Data","what":"Choosing a temporal resolution","title":"Fitting a VAST Model","text":"Depending system modeled, variety temporal resolutions possible. second step define temporal resolution, determine overall structure vast model predictions. Use function “SetTemporalFrame” example, set temporal resolution Year, cover 6 months Jan June. also pad ends data set zeros, mark ends season. season argument used define time period modeled beyond start end year. always integer vector form c(starting month, starting day, ending month, ending day). example , season defined Jan. 1, June 30. possible construct seasons run past Dec 31 using argument. function fills several slots Mill.vast object. Reference data temporal structure located “timetable” slot. Based settings, table include “Runyear” may different calendar year, start end dates run, generic “Time” column matches order period useful intend use timescale smaller one year. “Day” column refers julian calendar day year, “Statday” column indicates many days since start season. important features “vastnetwork”, contains network settings used internally tinyVAST, typically altered. Last “vastdata” slot contains data frame passed tinyVAST fitting model. observations countdata matched “timetable” slot now include Runyear Statday well. Lon/Lat coordinates also added. now, StreamVAST compatible multi-species models, though functionality expected future. Species Distribution columns fixed moment. Note, set padyear option TRUE, zero observations added start end season, useful many salmonid studies. second element list table useful relating time period back ’s normal calendar date.","code":"Mill.vast<-SetTemporalFrame(streamvast = Mill.vast,Time = \"Year\",season = c(1,1,6,30),                                   startdate = \"2013-01-01\",enddate = \"2022-06-30\",padyear = T) head(Mill.vast$vastdata) #>   Time Runyear       Date Year Month Day Statday Reach Species Dist Redds #> 1    1    2013 2013-03-05 2013     3   5      64     1   Redds  obs     0 #> 2    1    2013 2013-03-05 2013     3   5      64     2   Redds  obs     0 #> 3    1    2013 2013-03-05 2013     3   5      64     3   Redds  obs     0 #> 4    1    2013 2013-03-05 2013     3   5      64     4   Redds  obs     0 #> 5    1    2013 2013-03-19 2013     3  19      78     1   Redds  obs     0 #> 6    1    2013 2013-03-19 2013     3  19      78     2   Redds  obs     0 #>   Density   Length    Effort      Lat       Lon Original #> 1       0 1.065629 0.7515168 46.19086 -123.1760     TRUE #> 2       0 1.064799 1.0667105 46.19420 -123.1866     TRUE #> 3       0 1.021654 1.0224078 46.19933 -123.1954     TRUE #> 4       0 1.020937 1.0224078 46.20602 -123.1992     TRUE #> 5       0 1.065629 0.7515168 46.19086 -123.1760     TRUE #> 6       0 1.064799 1.0667105 46.19420 -123.1866     TRUE head(Mill.vast$timetable) #>   Runyear Year      Start       Date        End Time Month Day Statday Observed #> 1    2013 2013 2013-01-01 2013-04-01 2013-06-30    1     4  91      91     TRUE #> 2    2014 2014 2014-01-01 2014-04-01 2014-06-30    2     4  91      91     TRUE #> 3    2015 2015 2015-01-01 2015-04-01 2015-06-30    3     4  91      91     TRUE #> 4    2016 2016 2016-01-01 2016-03-31 2016-06-30    4     3  91      92     TRUE #> 5    2017 2017 2017-01-01 2017-04-01 2017-06-30    5     4  91      91     TRUE #> 6    2018 2018 2018-01-01 2018-04-01 2018-06-30    6     4  91      91     TRUE"},{"path":"https://jpharris7.github.io/StreamVAST/articles/model_fitting.html","id":"covariates","dir":"Articles","previous_headings":"Fitting a tinyVAST Model to Stream Network Data","what":"Covariates","title":"Fitting a VAST Model","text":"example use covariates, can added “vastdata” component ease. Depending structure covariate data, can matched date, lat/lon coordinates, reach identifier, combination . functions covered previous chapter can helpful. instance, AttachData function can used map covariate values different shapefile onto network structure “reachdata”, use reach numbers match vastdata.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/articles/model_fitting.html","id":"an-example-in-tinyvast","dir":"Articles","previous_headings":"Fitting a tinyVAST Model to Stream Network Data","what":"An example in tinyVAST","title":"Fitting a VAST Model","text":"model can fit using tinyVAST function. many options, can serve example. formula section can include variety fixed random effects uses syntax mgcv fitting splines. case, fit spline Statday, represents seasonal (intra-annual) patterns, offset survey effort. TinyVAST uses structural equation modeling framework specifying various effects, users advised read specifics. Specifying “sem = ’’”, uses default spatial effects stream network, counts location correlated distance exponential decay (Ornstein-Ulhenbeck process, see tinyVAST documentation). “dsem” argument used specify spatio-temporal interactions, case added 1 year lag default effects.","code":"fit<- tinyVAST( data = Mill.vast$vastdata,                 formula = Redds ~ 1 + s(Statday) + offset(log(Effort)),                 spatial_graph = Mill.vast$vastnetwork,                 space_columns = c(\"Lon\",\"Lat\"),                 variable_column = \"Species\",                 time_column = \"Runyear\",                 distribution_column = \"Dist\",                 sem=\"\",                 dsem = \"Redds -> Redds, 1, rho\",                 family=poisson(),                 control = tinyVASTcontrol(getJointPrecision = TRUE))"},{"path":"https://jpharris7.github.io/StreamVAST/articles/model_fitting.html","id":"preliminary-checks-and-troubleshooting","dir":"Articles","previous_headings":"Fitting a tinyVAST Model to Stream Network Data","what":"Preliminary checks and Troubleshooting","title":"Fitting a VAST Model","text":"outputs model can accessed fit, several useful determine algorithm run successfully. good check Hessian positive-definite. also wise look component loadings check reasonable Std. Errors. table, alpha terms refer fixed effects, log_lambda terms refer splines, beta terms refer spatial effect, theta refers spatio-temporal effect. Log_kappa term decorrelation distance spatial spatio-temporal effects. Consider removing terms poorly estimated, else adjust model structure satisfied results. ready proceed, add model streamvast object. predictions fitted tinyVAST model can quickly extracted using helper function VASTpreds. function format predictions several data frames, provide density count estimates reach time period. also provides upper lower 95% confidence bounds, based samples drawn posterior distribution. desired, can also produce area curve estimates useful many salmonids (note, AUC AUROC statistic classification success). Users can also specify number simulated draws make estimating confidence intervals. bias correction option exists removing transformation bias associated drawing normal samples posterior poisson distrubtion, computationally expensive time consuming. Users can also supply newdata argument predictions specific points desired, though predict function can also used fit similar effect. function filled many remaining components streamvast object. “stats” component summary stats. default, “preds” component contain estimates scaled full survey effort, reflects best estimate density reach time. “eval” componenet contains fitted values matched observed survey effort, useful evaluating residuals. Spacedata timedata provide average estimates time space. Aucdata list contains area curve estimates reach year, well totals year. “sims” component contains simulated counts several types based posterior draws. ’s always good idea plot residuals. Tinyvast models also compatible DHARMa package make useful plots assessing problems. helper function makes easier  Looks ok! second functon can produce maps output.  maps can also faceted year, month, etc.  Additional maps can easily generated using generic plotting functions. instance, average density respect space stored “spacedata” slot.  Similarly, pattern time stored “timedata.”  easiest way save fitted model RDS object. next chapter, discuss additions extensions model can used generate escapement estimates salmonid populations Pacific Northwest.","code":"fit$sdrep$pdHess #> [1] TRUE fit$sdrep #> sdreport(.) result #>              Estimate Std. Error #> alpha_j    -5.1040345  0.8766787 #> beta_z      0.6949493  0.1743692 #> beta_z      1.0126676  0.1854858 #> theta_z     1.3674885  0.5216452 #> log_lambda -3.2266104  0.7168398 #> log_kappa  -1.0713416  0.6030238 #> Maximum gradient component: 5.023135e-05 Mill.vast$vastmodel<-fit Mill.vast<-VASTpreds(streamvast = Mill.vast,makeauc = T,nsims = 100,bias.correct = F) resplot<-ggplot(data=Mill.vast$eval)+   geom_point(aes(x=fit_Density,y=Density))+   geom_abline(slope = 1,intercept = 0,col=2,linetype=2,linewidth=1)+   theme_bw()+xlab(\"Predicted Density\")+ylab(\"Observed Density\")  dharmaplot<-Dharmaplot(Mill.vast,span = .2) grid.arrange(resplot,dharmaplot,ncol=2) plotPredictionMap(streamvast = Mill.vast,mapvar = \"pred_Density\") plotPredictionMap(streamvast =Mill.vast, subset=Mill.vast$preds$Year%in%c(2014,2016,2018,2020), mapvar=\"pred_Density\",facet = \"Year\",make.labels = F,xaxis.breaks = NA,yaxis.breaks = NA) ggplot(data=Mill.vast$spacedata)+   geom_point(aes(x=Reach,y=Density))+ggtitle(\"Mill Creek - Average Density by Reach\")+   geom_line(aes(x=Reach,y=pred_Density))+   geom_line(aes(x=Reach,y=pred_Density_upper),linetype=3)+   geom_line(aes(x=Reach,y=pred_Density_lower),linetype=3)+theme_bw() year.breaks<-aggregate(Mill.vast$timedata$Dayseq,by=list(Mill.vast$timedata$Year),FUN=min)  ggplot(data=Mill.vast$timedata)+   geom_point(aes(x=Dayseq,y=Density))+ggtitle(\"MAG - Average Density by Reach\")+   geom_line(aes(x=Dayseq,y=pred_Density))+   geom_line(aes(x=Dayseq,y=pred_Density_upper),linetype=3)+   geom_line(aes(x=Dayseq,y=pred_Density_lower),linetype=3)+theme_bw()+   scale_x_continuous(breaks = year.breaks$x,labels = year.breaks$Group.1)"},{"path":"https://jpharris7.github.io/StreamVAST/articles/shape_prep.html","id":"streamvast","dir":"Articles","previous_headings":"","what":"StreamVAST","title":"Preparing a Stream Network","text":"StreamVAST R package designed help users format data freshwater stream networks interface VAST package produce spatio-temporal models animal densities. package contains variety useful functions quickly processing complex stream networks usable form, attaching variety data network. makes extensive use sfnetworks package, users advised familiarize basics sfnetworks, particularly regarding activation extraction data. chapter covers steps necessary prepare stream shapes associated data. second chapter demonstrate data can used create spatio-temporal models using VAST.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/articles/shape_prep.html","id":"example-steelhead-salmon-redds-in-mill-creek","dir":"Articles","previous_headings":"StreamVAST","what":"Example: Steelhead Salmon Redds in Mill Creek","title":"Preparing a Stream Network","text":"Mill Creek small watershed located east Longview, Washington home annual winter steelhead run February June. population assessed via counting number “redds” nests observed regular surveys spawning season. Redds recorded using GPS devices tracked successive surveys determine particular new observed previously.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/articles/shape_prep.html","id":"converting-your-shape-into-a-network","dir":"Articles","previous_headings":"StreamVAST","what":"Converting your shape into a network","title":"Preparing a Stream Network","text":"shape generated using ARCGIS derived USGS surveys. However, formatted network. linestrings shapefile generally carry nodes intersections stream, confound distance path calculations. good first step convert sfnetwork. helper function package makes easy ensures transfer data fields. Note data fields may longer valid (.e. values long segment inherited new smaller segments), usually works well identifiers. stream network functionality VAST requires streams part continuous network single root loops multi-thread channels. results network every section (except root) single parent single distance parent. shape structured single root, simple function find return sf POINT object.  identifying root node crucial step, several functions exist may help: -FindRoots: returns nodes intersecting segment -LocateFeature: Allows user select node using command line graphics window -RootNetwork: Ensures segments ordered correctly (away root) removes unconnected features Last, remove multi-channel sections network. case, one. FixLoops function can help guiding user series command line prompts. vignette, jump past process. also sometimes convenient leave step later, next section “Simplifying network shape” may also fix problems.  final result identified sfnetworks “root tree spatially explicit edges” now satisfied assumptions necessary VAST.","code":"Mill.net<-Makesfnetwork(Mill.basin0) Mill.root<-LocateRoot(Mill.net) #> # A sfnetwork with 388 nodes and 387 edges #> # #> # CRS:  NAD83 / Washington South (ftUS)  #> # #> # A rooted tree with spatially explicit edges #> # #> # A tibble: 388 × 1 #> # ℹ 388 more rows #> # ℹ 1 variable: geometry <GEOMETRY [US_survey_foot]> #> # #> # A tibble: 387 × 20 #>    from    to LLID   LLIDSRC LENGTH STRM_NAME FEATURE SCALED REV_DATE Correction #>   <int> <int> <chr>  <chr>    <dbl> <chr>     <chr>    <dbl> <chr>         <dbl> #> 1     1     2 12326… 24K      2222. NA        WC           0 06-12-01          0 #> 2     3     4 12326… 24K      2017. NA        WC           0 06-12-01          0 #> 3     5     6 12326… 24K      1440. NA        WC           0 06-12-01          0 #> # ℹ 384 more rows #> # ℹ 10 more variables: RMflagMich <dbl>, RMFlag_FD <dbl>, TopHatch <dbl>, #> #   BanksMeas <dbl>, BanksMouth <dbl>, CrctMethod <chr>, LengthFlag <dbl>, #> #   Shape_Leng <dbl>, geometry <LINESTRING [US_survey_foot]>, loop <lgl>"},{"path":"https://jpharris7.github.io/StreamVAST/articles/shape_prep.html","id":"simplifing-a-network-or-shape","dir":"Articles","previous_headings":"StreamVAST","what":"Simplifing a network or shape","title":"Preparing a Stream Network","text":"basin contains many branches small steelhead spawn inhabit, common first step simplify shape. number options, use redd data extract parts network redds observed. options include using line work, identifiers network object match exclude sections.  figure shows original network black, locations redd observations blue, new stream network red. new network reflects areas necessary connect observations root. process often leaves unnecessary nodes place, general best remove stage, unless wish nodes preserved future steps. now clean set shapes stream network","code":"Mill.basin2<-PruneNetwork(network = Mill.basin, root = Mill.root,match = Mill.redds.sf,plot=F) Mill.basin3<-SimplifyNetwork(network = Mill.basin2,makeplot = F)"},{"path":"https://jpharris7.github.io/StreamVAST/articles/shape_prep.html","id":"defining-spatial-frame","dir":"Articles","previous_headings":"StreamVAST","what":"Defining spatial frame","title":"Preparing a Stream Network","text":"next step define spatial resolution stream network. dataset, observation discreet gps coordinates, must aggregated defined reaches VAST model. Future options allow users define spatial resolution complex ways, now assign prediction frames selecting target size. use target 1 km 3280 feet, though algorithm adjust value make evenly sized spaced stream reaches, respecting nodes network. process pruning assigning reaches typically removes data attached network, can reattach using simple function. case, attach one field. new reaches unlikely match old ones, numeric values reach based weighted average areas reach overlaps, whereas character factor values concatenated make new value. also run quick function check network valid structure also compute useful values, marking reachid parent, distance segments (measured midpoints)","code":"Mill.reaches<-AssignReaches(network = Mill.basin3,targetsize = 3280) #> [1] \"Using reach size of 3444\" Mill.reaches2<-AttachData(shape = st_as_sf(activate(Mill.reaches,\"edges\")),refshape = Mill.basin0,fields = \"STRM_NAME\") Mill.reaches3<-CheckNetwork(network=as_sfnetwork(Mill.reaches2),root=Mill.root)"},{"path":"https://jpharris7.github.io/StreamVAST/articles/shape_prep.html","id":"assemble-the-data","dir":"Articles","previous_headings":"StreamVAST","what":"Assemble the Data","title":"Preparing a Stream Network","text":"Now fully processed valid network, assigned reaches, time assemble data frame. example, data collected surveys cover segment stream can defined start end point. points used determine reaches observed date, extent reach observed recorded “effort”, become offset VAST model. Counts can computed survey level, distinct observations (redds). Surveys formatted sf object LINESTRING survey transect, LINESTRING reasonably close linework used network. package includes two functions can help construct necessary survey object: -MakeSurveyTracks: Uses start stop coordinates trace path along network -RiverMeasureLL: Converts river measures Lat/Lon, vice versa numerous surveys, function can time consuming Future versions expanded capabilities also handle data collected discreet points, dams weirs. final step combine spatial reaches, surveys, data. last function use survey tracks determine amount effort applied reach given date, become offset VAST model. Separately, also match observations survey, allows observed counts density reach date calculated used model. example, observation coordinates, total count survey can also used (case, function assumes observations evenly spaced, equivalent constant density surveyed area. Note large datasets, step may take several hours. default, distance measures converted kilometers, can set user. next chapter, explore additional options formatting data use tinyVAST, ensure necessary accessory objects dataframes ready.","code":"Mill.data<-AssembleReddData(shape = Mill.reaches3,georedds = Mill.redds,georedds.coords = c(\"lon\",\"lat\"),reddcrs = 2286,surveys = Mill.surveys) head(Mill.data) #>   Year Day Reach    Effort Redds habitat  STRM_NAME  root parent #> 1 2013  64     1 0.7515168     0    TRUE Mill Creek  TRUE     NA #> 2 2013  64     2 1.0667105     0    TRUE Mill Creek FALSE      1 #> 3 2013  64     3 1.0224078     0    TRUE Mill Creek FALSE      2 #> 4 2013  64     4 1.0224078     0    TRUE Mill Creek FALSE      3 #> 5 2013  78     1 0.7515168     0    TRUE Mill Creek  TRUE     NA #> 6 2013  78     2 1.0667105     0    TRUE Mill Creek FALSE      1"},{"path":"https://jpharris7.github.io/StreamVAST/articles/survival_example.html","id":"estimating-salmonid-escapement","dir":"Articles","previous_headings":"","what":"Estimating Salmonid Escapement","title":"Estimating Salmonid Escapement after Fitting a VAST model","text":"project originally designed support salmonid population monitoring state Washington, US. chapters focus general applications, chapter cover methods specific Pacific Northwest salmonid community.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/articles/survival_example.html","id":"from-redd-density-to-fish-populations","dir":"Articles","previous_headings":"","what":"From Redd Density to Fish Populations","title":"Estimating Salmonid Escapement after Fitting a VAST model","text":"cases may possible directly model number unique redds, spawning ground monitoring suffers difficulties, interruptions, lack coverage make infeasible. Instead method focuses “area curve” AUC method (confused “area receiver operating curve” metric sometimes abbreviated AUC). method, predicted number total (non-unique) redds plotted time. area curve calculated separately reach year combination. calculations made previous chapter using VASTpreds function can accessed aucdata slot streamVAST object. area curve units Redds*Days. divide number residence survival time redds, result estimate number unique redds. value can obtained expert opinion literature, repeated observations redds available difficult model.","code":"dat1<-subset(Mill.vast$preds,Year==2015 & Reach==9)[,c(\"pred_Redds\",\"Statday\")] names(dat1)<-c(\"Redds\",\"Day\") dat1$group<-\"Predicted\" dat2<-subset(Mill.vast$countdata,Year==2015 & Reach==9)[,c(\"Redds\",\"Day\")] dat2$group<-\"Observed\"  ggplot(data=rbind(dat1,dat2))+   geom_point(aes(x=Day,y=Redds,col=group))+   geom_line(aes(x=Day,y=Redds,col=group))+   theme_bw()+theme(legend.title = element_blank())+   ggtitle(\"Year 2015 - Reach 9\") head(summary(Mill.vast$aucdata$auctotals)) #>     Runyear          AUC       pred_AUC      pred_AUC_lower    pred_AUC_upper   #>  Min.   :2013   Min.   :0   Min.   : 117.5   Min.   :  77.57   Min.   : 420.3   #>  1st Qu.:2015   1st Qu.:0   1st Qu.: 220.8   1st Qu.: 162.59   1st Qu.: 612.5   #>  Median :2018   Median :0   Median : 367.0   Median : 298.21   Median : 781.8   #>  Mean   :2018   Mean   :0   Mean   : 577.6   Mean   : 488.35   Mean   : 942.0   #>  3rd Qu.:2020   3rd Qu.:0   3rd Qu.: 842.7   3rd Qu.: 696.77   3rd Qu.:1107.9   #>  Max.   :2022   Max.   :0   Max.   :1475.0   Max.   :1351.78   Max.   :1873.4   #>   pred_AUC_SD     #>  Min.   : 76.75   #>  1st Qu.: 88.81   #>  Median :121.86   #>  Mean   :136.40   #>  3rd Qu.:154.82   #>  Max.   :253.66"},{"path":"https://jpharris7.github.io/StreamVAST/articles/survival_example.html","id":"modeling-redd-survival","dir":"Articles","previous_headings":"","what":"Modeling Redd Survival","title":"Estimating Salmonid Escapement after Fitting a VAST model","text":"First recall redd data minor formatting. redd must date, unique id number, set coordinates. must also status code uses “NR” New Redds, “SV” Still Visible redds observed previously, “NV” Visible redds previously observed longer identifiable. Next, MakeReddSurvival function process data usable form. surveyed reach multiple times, can use intervals surveys redd status codes determine minimum maximum survival time redd.","code":"Mill.redds.sf<-st_read(dsn=\"Mill_Creek_redds_example.shp\") #> Reading layer `Mill_Creek_redds_example' from data source  #>   `C:\\Users\\harj3477\\Jeremy Documents\\R materials\\StreamVAST\\vignettes\\Mill_Creek_redds_example.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 389 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 942128.8 ymin: 322744.9 xmax: 1149562 ymax: 357187 #> Projected CRS: NAD83 / Washington South (ftUS) Mill.redds.sf<-st_transform(Mill.redds.sf,\"wgs84\")  Mill.redds<-data.frame(as.data.frame(Mill.redds.sf)[,c(\"Year\",\"rdd_nm_\",\"srvy_dt\",\"rdd_st_\")],lon=st_coordinates(Mill.redds.sf)[,1],lat=st_coordinates(Mill.redds.sf)[,2]) Mill.redds$srvy_dt<-sapply(Mill.redds$srvy_dt,FUN=function(x)return(strsplit(x,split=\" \")[[1]][1]))  Mill.redds$day<-as.integer(strftime(x=strptime(x=Mill.redds$srvy_dt,format=\"%m/%d/%Y\"),format=\"%j\")) head(Mill.redds) #>   Year    rdd_nm_   srvy_dt rdd_st_       lon      lat day #> 1 2022 RD00015368 4/25/2022      NR -123.1926 46.19579 115 #> 2 2022 RD00019698 4/12/2022      NR -123.2086 46.21647 102 #> 3 2022 RD00019698 4/25/2022      SV -123.2086 46.21647 115 #> 4 2022 RD00019699 4/12/2022      NR -123.2545 46.24179 102 #> 5 2022 RD00019699 4/25/2022      SV -123.2545 46.24179 115 #> 6 2022 RD00028389 4/25/2022      NR -123.2351 46.27183 115 Mill.survdata<-MakeReddSurvival(streamvast = Mill.vast,redds = Mill.redds,redd.ids = \"rdd_nm_\",                            redd.crs = \"wgs84\",redd.status = \"rdd_st_\",survey.tol = 250) #>   |                                                                              |                                                                      |   0%  |                                                                              |=                                                                     |   1%  |                                                                              |=                                                                     |   2%  |                                                                              |==                                                                    |   2%  |                                                                              |==                                                                    |   3%  |                                                                              |===                                                                   |   4%  |                                                                              |===                                                                   |   5%  |                                                                              |====                                                                  |   5%  |                                                                              |====                                                                  |   6%  |                                                                              |=====                                                                 |   6%  |                                                                              |=====                                                                 |   7%  |                                                                              |=====                                                                 |   8%  |                                                                              |======                                                                |   8%  |                                                                              |======                                                                |   9%  |                                                                              |=======                                                               |   9%  |                                                                              |=======                                                               |  10%  |                                                                              |========                                                              |  11%  |                                                                              |========                                                              |  12%  |                                                                              |=========                                                             |  12%  |                                                                              |=========                                                             |  13%  |                                                                              |==========                                                            |  14%  |                                                                              |==========                                                            |  15%  |                                                                              |===========                                                           |  15%  |                                                                              |===========                                                           |  16%  |                                                                              |============                                                          |  17%  |                                                                              |============                                                          |  18%  |                                                                              |=============                                                         |  18%  |                                                                              |=============                                                         |  19%  |                                                                              |==============                                                        |  19%  |                                                                              |==============                                                        |  20%  |                                                                              |==============                                                        |  21%  |                                                                              |===============                                                       |  21%  |                                                                              |===============                                                       |  22%  |                                                                              |================                                                      |  22%  |                                                                              |================                                                      |  23%  |                                                                              |=================                                                     |  24%  |                                                                              |=================                                                     |  25%  |                                                                              |==================                                                    |  25%  |                                                                              |==================                                                    |  26%  |                                                                              |===================                                                   |  27%  |                                                                              |====================                                                  |  28%  |                                                                              |====================                                                  |  29%  |                                                                              |=====================                                                 |  30%  |                                                                              |======================                                                |  31%  |                                                                              |======================                                                |  32%  |                                                                              |=======================                                               |  32%  |                                                                              |=======================                                               |  33%  |                                                                              |========================                                              |  34%  |                                                                              |========================                                              |  35%  |                                                                              |=========================                                             |  35%  |                                                                              |=========================                                             |  36%  |                                                                              |==========================                                            |  36%  |                                                                              |==========================                                            |  37%  |                                                                              |==========================                                            |  38%  |                                                                              |===========================                                           |  38%  |                                                                              |===========================                                           |  39%  |                                                                              |============================                                          |  39%  |                                                                              |============================                                          |  40%  |                                                                              |=============================                                         |  41%  |                                                                              |=============================                                         |  42%  |                                                                              |==============================                                        |  42%  |                                                                              |==============================                                        |  43%  |                                                                              |===============================                                       |  44%  |                                                                              |===============================                                       |  45%  |                                                                              |================================                                      |  45%  |                                                                              |================================                                      |  46%  |                                                                              |=================================                                     |  47%  |                                                                              |=================================                                     |  48%  |                                                                              |==================================                                    |  48%  |                                                                              |==================================                                    |  49%  |                                                                              |===================================                                   |  49%  |                                                                              |===================================                                   |  50%  |                                                                              |===================================                                   |  51%  |                                                                              |====================================                                  |  51%  |                                                                              |====================================                                  |  52%  |                                                                              |=====================================                                 |  52%  |                                                                              |=====================================                                 |  53%  |                                                                              |======================================                                |  54%  |                                                                              |======================================                                |  55%  |                                                                              |=======================================                               |  55%  |                                                                              |=======================================                               |  56%  |                                                                              |========================================                              |  57%  |                                                                              |========================================                              |  58%  |                                                                              |=========================================                             |  58%  |                                                                              |=========================================                             |  59%  |                                                                              |==========================================                            |  60%  |                                                                              |==========================================                            |  61%  |                                                                              |===========================================                           |  61%  |                                                                              |===========================================                           |  62%  |                                                                              |============================================                          |  62%  |                                                                              |============================================                          |  63%  |                                                                              |============================================                          |  64%  |                                                                              |=============================================                         |  64%  |                                                                              |=============================================                         |  65%  |                                                                              |==============================================                        |  65%  |                                                                              |==============================================                        |  66%  |                                                                              |===============================================                       |  67%  |                                                                              |===============================================                       |  68%  |                                                                              |================================================                      |  68%  |                                                                              |================================================                      |  69%  |                                                                              |=================================================                     |  70%  |                                                                              |==================================================                    |  71%  |                                                                              |==================================================                    |  72%  |                                                                              |===================================================                   |  73%  |                                                                              |====================================================                  |  74%  |                                                                              |====================================================                  |  75%  |                                                                              |=====================================================                 |  75%  |                                                                              |=====================================================                 |  76%  |                                                                              |======================================================                |  77%  |                                                                              |======================================================                |  78%  |                                                                              |=======================================================               |  78%  |                                                                              |=======================================================               |  79%  |                                                                              |========================================================              |  79%  |                                                                              |========================================================              |  80%  |                                                                              |========================================================              |  81%  |                                                                              |=========================================================             |  81%  |                                                                              |=========================================================             |  82%  |                                                                              |==========================================================            |  82%  |                                                                              |==========================================================            |  83%  |                                                                              |===========================================================           |  84%  |                                                                              |===========================================================           |  85%  |                                                                              |============================================================          |  85%  |                                                                              |============================================================          |  86%  |                                                                              |=============================================================         |  87%  |                                                                              |=============================================================         |  88%  |                                                                              |==============================================================        |  88%  |                                                                              |==============================================================        |  89%  |                                                                              |===============================================================       |  90%  |                                                                              |===============================================================       |  91%  |                                                                              |================================================================      |  91%  |                                                                              |================================================================      |  92%  |                                                                              |=================================================================     |  92%  |                                                                              |=================================================================     |  93%  |                                                                              |=================================================================     |  94%  |                                                                              |==================================================================    |  94%  |                                                                              |==================================================================    |  95%  |                                                                              |===================================================================   |  95%  |                                                                              |===================================================================   |  96%  |                                                                              |====================================================================  |  97%  |                                                                              |====================================================================  |  98%  |                                                                              |===================================================================== |  98%  |                                                                              |===================================================================== |  99%  |                                                                              |======================================================================| 100% head(Mill.survdata) #>         Redd Year min.start max.start min.end max.end min.duration max.duration #> 1 RD00015368 2022       103       115     116     129            1           26 #> 2 RD00019698 2022        81       102     116     129           14           48 #> 3 RD00019699 2022        81       102     116     129           14           48 #> 4 RD00028389 2022       103       115     116     129            1           26 #> 5 RD00028390 2022       103       115     116     129            1           26 #> 6 RD00028897 2022       116       131     132     145            1           29 #>   Reach       lon      lat complete #> 1     2 -123.1926 46.19579    FALSE #> 2     6 -123.2086 46.21647    FALSE #> 3    11 -123.2545 46.24179    FALSE #> 4    17 -123.2351 46.27183    FALSE #> 5     3 -123.1964 46.20197    FALSE #> 6     6 -123.2090 46.21606    FALSE"},{"path":"https://jpharris7.github.io/StreamVAST/articles/survival_example.html","id":"inla-survival-model","dir":"Articles","previous_headings":"Modeling Redd Survival","what":"INLA survival model","title":"Estimating Salmonid Escapement after Fitting a VAST model","text":"survival model, can use existing methods INLA fit pretty good survival model without much difficulty. model use simplified spatial graph estimates spatial covariances based adjacency opposed distance. function included conveniently generate required matrix. build model INLA directly. First, convert data survival object. Using ‘event’ code 3 specifies data interval censored time time2. model fit, random walk effects Year besag ICAR effect space based adjaceny graph. family can either ‘gamma.surv’ ‘weibull.surv’ users encouraged experiment find distribution best data. hyperparameter estimated INLA shape parameter estimated gamma distribution. INLA uses slightly unusual parameterization rate parameter. SurvivalTable function converts results model tabular format shape scale parameters capable distribution functions (dgamma, etc.) base R. distributions, can compute median survival time estimated year reach. survival values can plotted variety ways plotSurvivalHistogram plotSurvivalCurves functions help. final step match predictions survival time auc predictions. easily accomplished MakeEscapement function. fill “escapedata” slot streamvast object, contains estimates escapement reach year, well totals year.","code":"Mill.mat<-AdjacencyMatrix(Mill.vast$reachdata) Mill.inla.surv<-inla.surv(time=Mill.survdata$min.duration,event=rep(3,nrow(Mill.survdata)),time2 = Mill.survdata$max.duration)  Mill.inla<-inla(Mill.inla.surv~f(Year,model=\"rw1\")+f(Reach,model=\"besag\",graph = Mill.mat),                data=Mill.survdata,family=\"gamma.surv\",control.compute = list(waic=T)) #> Warning in inla.model.properties.generic(inla.trim.family(model), mm[names(mm) == : Model 'gammasurv' in section 'likelihood' is marked as 'experimental'; changes may appear at any time. #>   Use this model with extra care!!! Further warnings are disabled. Mill.gamma.table<-SurvivalTable(model = Mill.inla) head(Mill.gamma.table) #>   Year Reach    Shape    Scale  MedLife #> 1 2013     1 10.70806 2.368362 24.57563 #> 2 2013     2 10.70806 2.370724 24.60014 #> 3 2013     3 10.70806 2.373694 24.63095 #> 4 2013     4 10.70806 2.380152 24.69796 #> 5 2013     5 10.70806 2.388422 24.78378 #> 6 2013     6 10.70806 2.397176 24.87461 plotSurvivalCurves(model = Mill.inla,data = Mill.survdata,                               title = \"Mill Creek: Median Survival\")+xlim(NA,80) Mill.vast<-MakeEscapement(streamvast = Mill.vast,survival = Mill.gamma.table) head(Mill.vast$escapedata$escapedata) #>   Runyear Reach    Escape Escape_lower Escape_upper Escape_SD #> 1    2013     1 0.5076596    0.1628871     1.971844 0.5247303 #> 2    2013     2 1.0979841    0.4006307     3.940403 0.9227687 #> 3    2013     3 2.2323037    1.1909101     4.420250 0.9661213 #> 4    2013     4 2.5235409    1.1567162     6.813785 1.3288599 #> 5    2013     5 5.8685031    3.3022716     9.269785 1.7579439 #> 6    2013     6 9.9483273    6.3363619    15.465090 2.3689752 plotEscapement(Mill.vast)"},{"path":"https://jpharris7.github.io/StreamVAST/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy Harris. Author, maintainer.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harris J (2024). StreamVAST: Tools using 'VAST' stream networks. R package version 0.0.0.9000, https://jpharris7.github.io/StreamVAST/.","code":"@Manual{,   title = {StreamVAST: Tools for using 'VAST' with stream networks},   author = {Jeremy Harris},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://jpharris7.github.io/StreamVAST/}, }"},{"path":"https://jpharris7.github.io/StreamVAST/index.html","id":"streamvast","dir":"","previous_headings":"","what":"Tools for using VAST with stream networks","title":"Tools for using VAST with stream networks","text":"R package modeling stream networks VAST","code":""},{"path":"https://jpharris7.github.io/StreamVAST/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Tools for using VAST with stream networks","text":"StreamVAST package aids users designing spatio-temporal models data collected stream networks. designed integrate easily tinyVAST package), users need somewhat familiar tinyVAST understand make full use features. working knowledge sfnetworks package also recommended. StreamVAST contains variety functions guide users converting linework sources valid network appropriate characteristics. User options selecting root node, pruning unnecessary branches, dividing network prediction frames, associating various data types network features. features assist generating objects needed VAST stream network functionality, assessing model fit, easily making various maps plots. package still early phases development, users expect frequent updates changes. ## Installation strongly recommended users first install tinyVAST package dependencies. install StreamVAST, use code: doesn’t work, consider leaving vignettes, development.","code":"remotes::install_github(\"Jpharris7/StreamVAST\") remotes::install_github(\"Jpharris7/StreamVAST\", build_vignettes = FALSE)"},{"path":"https://jpharris7.github.io/StreamVAST/index.html","id":"shape-and-data-prep","dir":"","previous_headings":"","what":"Shape and Data Prep","title":"Tools for using VAST with stream networks","text":"section demonstrates format clean set lines, convert network, root network, remove unnecessary sections, associate various types data network. Preparing Stream Network","code":""},{"path":"https://jpharris7.github.io/StreamVAST/index.html","id":"formating-and-running-vast","dir":"","previous_headings":"","what":"Formating and Running VAST","title":"Tools for using VAST with stream networks","text":"section shows use network associated data produce model using VAST functions, provides basic advice choosing settings features. Fitting VAST Model ## Plots outputs tutorial section construction.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AddFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Add nodes or edges to a sfnetwork — AddFeatures","title":"Add nodes or edges to a sfnetwork — AddFeatures","text":"function adds additional nodes edge segments network. adding anything, checks new features distinct pre-existing features, relatively close existing network. Note, function tested extensively.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AddFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add nodes or edges to a sfnetwork — AddFeatures","text":"","code":"AddFeatures(network, nodes, edges, crs, tolerance = 200, tolerance2 = 10)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/AddFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add nodes or edges to a sfnetwork — AddFeatures","text":"network sfnetwork object nodes data frame lon lat columns, sf object POINT geometry edges sf object LINESTRING geometry includes edges added crs crs object, nodes edges different crs network tolerance maximum distance snapping shape network, shapes outside tolerance removed tolerance2 maximum distance snapping nodes together, new nodes within tolerance distinct existing nodes","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AddFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add nodes or edges to a sfnetwork — AddFeatures","text":"sfnetwork indicated nodes added","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AdjacencyMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an adjacency matrix from an sf object — AdjacencyMatrix","title":"Make an adjacency matrix from an sf object — AdjacencyMatrix","text":"Make adjacency matrix sf object","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AdjacencyMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an adjacency matrix from an sf object — AdjacencyMatrix","text":"","code":"AdjacencyMatrix(reaches)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/AdjacencyMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an adjacency matrix from an sf object — AdjacencyMatrix","text":"reaches sf object LINESTRING geometry representing stream network","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AdjacencyMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an adjacency matrix from an sf object — AdjacencyMatrix","text":"adjacency matrix used INLA spatial relationships","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssembleReddData.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"function takes sfnetwork sf shape, set surveys, optionally set georeferenced redds observations, returns data set effort assigned reach count types associated observation date.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssembleReddData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"","code":"AssembleReddData(   shape,   georedds = NA,   georedds.type = NA,   georedds.coords = NA,   reddcrs = \"wgs84\",   tolerance.redds = 250,   tolerance.surveys = 10,   surveys,   survey.redds = NA,   dist.units )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssembleReddData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"shape sf object LINESTRING geometries, sfnetwork georedds optional dataframe coordinates redd observation georedds.type optional name column classification redds georedds.coords character vector column names lon/lat georedds reddcrs crs coordinates georedds tolerance.redds maximum distance snapping redds shape tolerance.surveys maximum distance snapping surveys shape (small) surveys sf object LINESTRINGs representing surveys survey.redds optional name column survey counts dist.units character string units","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssembleReddData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"dataframe dates, counts, effort surveyed location","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssembleReddData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"Error Note: can cause reach numbers misassigned circumstances Need investigate fix. meantime, always sure check outputs.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssignReaches.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide a network into reaches — AssignReaches","title":"Divide a network into reaches — AssignReaches","text":"function takes network divides distinct reaches based target size want set boundaries, use setnodes set targetsize high setnodes argument can used ensure certain reach boundaries (implemented yet)","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssignReaches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide a network into reaches — AssignReaches","text":"","code":"AssignReaches(network, targetsize = NA, habitat, setnodes)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssignReaches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divide a network into reaches — AssignReaches","text":"network sfnetwork targetsize desired size use reaches, set NA use set nodes habitat logical vector identifies areas habitat (T) vs non-habitat (F) setnodes sf POINTS object contains nodes add shape","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AssignReaches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divide a network into reaches — AssignReaches","text":"new sfnetwork object divided reaches approximately correct size","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AttachData.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach Data to a network — AttachData","title":"Attach Data to a network — AttachData","text":"Take data contained one sf LINESTRING object attaches network. Values averaged combined appropriate. Take care ID numbers coded data may appear numeric, meant combined averaged.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AttachData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach Data to a network — AttachData","text":"","code":"AttachData(   shape,   refshape,   weight.type = 1,   fields = \"all\",   logical = F,   tolerance = 100 )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/AttachData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach Data to a network — AttachData","text":"shape sfnetwork sf object LINESTRING geometry attach data refshape sf object LINESTRING geometry contains desired data weight.type interger indicating weight type used; see details fields character vector names columns attach, \"\" logical T/F determining handle logical values tolerance number used matching lines perfectly aligned","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/AttachData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach Data to a network — AttachData","text":"sfnetwork consisting original shape data attached now","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/CheckNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a network and correct common problems — CheckNetwork","title":"Check a network and correct common problems — CheckNetwork","text":"function checks direction stream network away root fixes problems, also adds column named \"parent\" shape","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/CheckNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a network and correct common problems — CheckNetwork","text":"","code":"CheckNetwork(network, root)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/CheckNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a network and correct common problems — CheckNetwork","text":"network sfnetwork object root sf POINT vector coordinates root","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/CheckNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a network and correct common problems — CheckNetwork","text":"sfnetwork additional data attached","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/ConstructStreamVAST.html","id":null,"dir":"Reference","previous_headings":"","what":"ConstructStreamVAST This function constructs objects with class ","title":"ConstructStreamVAST This function constructs objects with class ","text":"ConstructStreamVAST function constructs objects class \"StreamVAST\". Depending arguments supplied, either initialize object countdata reachdata, add details already defined StreamVAST object.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/ConstructStreamVAST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ConstructStreamVAST This function constructs objects with class ","text":"","code":"ConstructStreamVAST(countdata, reachdata, surveydata, countname, reachname)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/ConstructStreamVAST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConstructStreamVAST This function constructs objects with class ","text":"countdata dataframe containing count data, outputed AssembleReddData reachdata sf object data reaches, AssignReaches surveydata optional data frame sf object survey information, MakeSurveyTracks, much right now countname column name countdata use reachname column name reachdata use unitconv value divide river lengths","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/ConstructStreamVAST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ConstructStreamVAST This function constructs objects with class ","text":"streamvast object appropriate formatting","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/CropArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop an sf shape - A graphical wrapper for the st_crop function — CropArea","title":"Crop an sf shape - A graphical wrapper for the st_crop function — CropArea","text":"Crop sf shape - graphical wrapper st_crop function","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/CropArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop an sf shape - A graphical wrapper for the st_crop function — CropArea","text":"","code":"CropArea(shape, guides, xmin, xmax, ymin, ymax)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/CropArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop an sf shape - A graphical wrapper for the st_crop function — CropArea","text":"shape sf object guides sf object like highlighted help make selections xmin numeric; minimum value left boundary xmax numeric; max value right boundary ymin numeric; minimum value bottom boundary ymax numeric; max value top boundary","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/CropArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop an sf shape - A graphical wrapper for the st_crop function — CropArea","text":"sf object cropped user inputs","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Dharmaplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the dHARMa scaled residuals, accounts for dummy data — Dharmaplot","title":"Plot the dHARMa scaled residuals, accounts for dummy data — Dharmaplot","text":"Plot dHARMa scaled residuals, accounts dummy data","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Dharmaplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the dHARMa scaled residuals, accounts for dummy data — Dharmaplot","text":"","code":"Dharmaplot(streamvast, span = 0.1)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/Dharmaplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the dHARMa scaled residuals, accounts for dummy data — Dharmaplot","text":"streamvast streamvast object fitted model predictions span smoothing parameter line","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Dharmaplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the dHARMa scaled residuals, accounts for dummy data — Dharmaplot","text":"plot mimicing style dHARMa, accounts dummy data","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/EditFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit a shape or network in real time — EditFeatures","title":"Edit a shape or network in real time — EditFeatures","text":"Allows user add points remove features selecting plot window command line prompts","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/EditFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit a shape or network in real time — EditFeatures","text":"","code":"EditFeatures(shape, root)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/EditFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit a shape or network in real time — EditFeatures","text":"shape sf sfnetworks object editted root sf POINT root (might obsolete)","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/EditFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit a shape or network in real time — EditFeatures","text":"sf sfnetworks object user specificed alterations","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/ExtractBasin.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts a basin or subbasin — ExtractBasin","title":"Extracts a basin or subbasin — ExtractBasin","text":"function takes shape extracts network node Note function preserve information associated original shapefile Future versions allow user specify information preserve, allow ","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/ExtractBasin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts a basin or subbasin — ExtractBasin","text":"","code":"ExtractBasin(   shape,   root,   basins,   exclude,   extract.inner = F,   attach.data = T,   upper,   upper.crs,   root.tolerance = Inf )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/ExtractBasin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts a basin or subbasin — ExtractBasin","text":"shape sf object consisting linestrings (multilinestrings!) root sf point, length 2 vector xy coordinates basins vector names sf feature indicating basin extracted exclude vector indexes dropped, attempt match single name extract.inner logical; nodes basins root extracted attach.data logical; old data fields obtained; time consuming upper point points stop extraction upper.crs crs string upper point, different shape root.tolerance tolerance setting root. Low values add root network new node.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/ExtractBasin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts a basin or subbasin — ExtractBasin","text":"sfnetwork containing specified subbasins","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/FindRoots.html","id":null,"dir":"Reference","previous_headings":"","what":"FindRoots — FindRoots","title":"FindRoots — FindRoots","text":"function locates vertices connected shape specified mainstem","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/FindRoots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FindRoots — FindRoots","text":"","code":"FindRoots(shape, mainstem = NA)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/FindRoots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FindRoots — FindRoots","text":"shape sf object linestring geometry Identifier data mainstem name unique id mainstem basins branch ","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/FindRoots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FindRoots — FindRoots","text":"sf object points potential root","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/FixLoops.html","id":null,"dir":"Reference","previous_headings":"","what":"Guides the user in how to fix loops — FixLoops","title":"Guides the user in how to fix loops — FixLoops","text":"function guide user eliminating loops network using command line. Note vast, rooted tree required, reach can multiple parents","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/FixLoops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guides the user in how to fix loops — FixLoops","text":"","code":"FixLoops(network, root, guides = NULL)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/FixLoops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guides the user in how to fix loops — FixLoops","text":"network sfnetwork root sf object coordinates root guides optional list sf objects may assist decision making","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/FixLoops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guides the user in how to fix loops — FixLoops","text":"sfnetwork user specified sections removed","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Jeremy_sample_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — Jeremy_sample_variable","title":"Title — Jeremy_sample_variable","text":"Title","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Jeremy_sample_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — Jeremy_sample_variable","text":"","code":"Jeremy_sample_variable(   obj,   newdata,   what = \"mu_g\",   n_samples = 100,   sample_fixed = TRUE,   seed = 123456,   bias.correct = F )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/Jeremy_sample_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — Jeremy_sample_variable","text":"obj tinyVAST model object newdata dataset making new predictions predictions desired, almost always \"mu_g\" n_samples integer samples sample_fixed logical; almost always T seed integer; seed random draws bias.correct logical; transformation bias correction applied; slow","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Jeremy_sample_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — Jeremy_sample_variable","text":"object simulated predictions newdata","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/LocateFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate a feature on a shape or network — LocateFeature","title":"Locate a feature on a shape or network — LocateFeature","text":"Allows user select number shapes sf object network clicking plot window. shape converted sfnetwork first","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/LocateFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate a feature on a shape or network — LocateFeature","text":"","code":"LocateFeature(shape, type)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/LocateFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate a feature on a shape or network — LocateFeature","text":"shape sf object LINESTRING geometry sfnetwork type Either \"POINT\", \"VERTEX\" \"SEGMENT\" indicates type shape select","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/LocateFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate a feature on a shape or network — LocateFeature","text":"sf object containing POINTS LINESTRINGS selected user","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/LocateRoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate the root of a network — LocateRoot","title":"Locate the root of a network — LocateRoot","text":"Locates root network, assuming one. network unconnected nodes valid root, returns error","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/LocateRoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate the root of a network — LocateRoot","text":"","code":"LocateRoot(network)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/LocateRoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate the root of a network — LocateRoot","text":"network sf network object valid root","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/LocateRoot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate the root of a network — LocateRoot","text":"sf object POINT geometry representing root network","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeEscapement.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a table of escapement values based on the AUC method — MakeEscapement","title":"Make a table of escapement values based on the AUC method — MakeEscapement","text":"Make table escapement values based AUC method","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeEscapement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a table of escapement values based on the AUC method — MakeEscapement","text":"","code":"MakeEscapement(   streamvast,   survival,   fixed.survival = F,   mult = 1.62,   years = \"all\",   reaches = \"all\" )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeEscapement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a table of escapement values based on the AUC method — MakeEscapement","text":"streamvast fitted streamvast object auc predictions survival table survival values, usually SurvivalTable fixed.survival numeric; sets survival fixed value years/reaches mult numeric: value multiply number unique redds , typically spawner/redds ratio","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeEscapement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a table of escapement values based on the AUC method — MakeEscapement","text":"table escapement values year reach","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeReddSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert redd data into survival data set — MakeReddSurvival","title":"Convert redd data into survival data set — MakeReddSurvival","text":"function takes dataframe repeated redd observations time converts format suitable modeling redd survival.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeReddSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert redd data into survival data set — MakeReddSurvival","text":"","code":"MakeReddSurvival(   streamvast,   redds,   redd.ids = \"redd_name_txt\",   redd.crs = \"wgs84\",   redd.coords = c(\"lon\", \"lat\"),   survey.tol = 250,   redd.status = \"redd_status_code\",   min.surveys = 1,   buffer = 14 )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeReddSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert redd data into survival data set — MakeReddSurvival","text":"streamvast streamvast object reachdata, countdata, surveydata redds dataframe containing observations redds row redd.ids character; name column consistent id read time redd.crs crs redds redd.coords vector length 2 names columns longitude latitude survey.tol numeric; max tolerance matching redds survey lines redd.status character; name column redd status (use NR, SV, NV coding) min.surveys minimum number surveys observations reach included buffer number days added redds found first last day season","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeReddSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert redd data into survival data set — MakeReddSurvival","text":"dataframe formated use INLA survival models","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Makesfnetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a sf network — Makesfnetwork","title":"Make a sf network — Makesfnetwork","text":"function converts sf shape linestring multilinestring geometries sfnetwork object. Mostly, used internally.","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Makesfnetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a sf network — Makesfnetwork","text":"","code":"Makesfnetwork(shape, attach.data = F, simple = T)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/Makesfnetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a sf network — Makesfnetwork","text":"shape sf object LINESTRING MULTILINESTRING geometry attach.data Logical, whether data fields preserved simple Logical, whether use fast simple method, slower thorough method","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/Makesfnetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a sf network — Makesfnetwork","text":"sfnetwork object","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeSurveyTracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","title":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","text":"function uses coordinates locate start stop points survey draws line follows stream contours points. multiple paths available, choose shortest, best eliminate multichannel sections ahead time","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeSurveyTracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","text":"","code":"MakeSurveyTracks(   shape,   surveys,   surveys.crs = \"wgs84\",   save.col = \"all\",   maxdist = 25,   survey.coords = c(\"startlon\", \"startlat\", \"endlon\", \"endlat\") )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeSurveyTracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","text":"shape sf network sf object LINESTRING geometry surveys data frame coordinates desired information surveys.crs crs object code survey coordinates save.col character vector names columns save, \"\" maxdist maximum distance coordinates compared shape survey.coords vector names column numbers; order matters","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/MakeSurveyTracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","text":"sf object LINESTRINGS data representing survey","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotEscapement.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a plot of yearly escapement values — plotEscapement","title":"Make a plot of yearly escapement values — plotEscapement","text":"Make plot yearly escapement values","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotEscapement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a plot of yearly escapement values — plotEscapement","text":"","code":"plotEscapement(streamvast, obs.escape, title, ribbons = NA, median = F)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotEscapement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a plot of yearly escapement values — plotEscapement","text":"obs.escape vector observed reported escapement values; must equal # years escape title character; title passed ggtitle median plot show predicted escapement based mle median posterior escape table escapement values, usually MakeEscapement","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotEscapement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a plot of yearly escapement values — plotEscapement","text":"either ggplot object dataframe depending 'plot' option","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotPredictionMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps, the desired data, with options for facetting — plotPredictionMap","title":"Maps, the desired data, with options for facetting — plotPredictionMap","text":"Maps, desired data, options facetting","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotPredictionMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps, the desired data, with options for facetting — plotPredictionMap","text":"","code":"plotPredictionMap(   streamvast,   mapvar = \"pred_Density\",   facet = NA,   FUN = \"mean\",   background,   subset,   make.labels = F,   xaxis.breaks = NA,   yaxis.breaks = NA,   palette = \"turbo\",   legendname,   max = Inf )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotPredictionMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps, the desired data, with options for facetting — plotPredictionMap","text":"streamvast streamvast object prediction data frame mapvar column data map facet column determine facets, vector values FUN function like mean median summarize data background sf object put background subset logical vector indicating pred values use make.labels reaches labelled, turn multiple years xaxis.breaks Vector x values axis lines; useful reduce crowding yaxis.breaks Vector y values axis lines; useful reduce crowding palette viridis color palette plotting legendname character; name legend max maximum value cap scale; values max set equal max","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotPredictionMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maps, the desired data, with options for facetting — plotPredictionMap","text":"colored heatmap desired variable mapped stream network","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotStream.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a line plot that shows tributaries by stream distance — plotStream","title":"Makes a line plot that shows tributaries by stream distance — plotStream","text":"Makes line plot shows tributaries stream distance","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotStream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a line plot that shows tributaries by stream distance — plotStream","text":"","code":"plotStream(   streamvast,   plotvar = \"pred_Density\",   ylab,   streamname,   usepreds = T,   title,   show.names = \"all\" )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotStream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes a line plot that shows tributaries by stream distance — plotStream","text":"streamvast streamvast object predictions evaluations plotvar column name data plotted ylab character, label y axis streamname column name reaches stream name usepreds logical, prediction evaluation data used, absent, function search title title display graph show.names character; vector names highlight, useful large watersheds","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotStream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes a line plot that shows tributaries by stream distance — plotStream","text":"plot variable respect ot stream distance","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotSurvivalCurves.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot survival curves from a INLA survival model — plotSurvivalCurves","title":"Plot survival curves from a INLA survival model — plotSurvivalCurves","text":"Plot survival curves INLA survival model","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotSurvivalCurves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot survival curves from a INLA survival model — plotSurvivalCurves","text":"","code":"plotSurvivalCurves(model, data, year = \"all\", reach = \"all\", title, mult = 1)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotSurvivalCurves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot survival curves from a INLA survival model — plotSurvivalCurves","text":"model fitted INLA survival model data dataframe redd observations, usually MakeReddSurvival year numeric; subset years include plot reach numeric; subset reach numbers include plot title character; title pass ggtitle() mult numeric multiplier, used backtransform values, necessary","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotSurvivalCurves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot survival curves from a INLA survival model — plotSurvivalCurves","text":"ggplot showing ","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotSurvivalHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a histogram of survival estimates across years and reaches — plotSurvivalHistogram","title":"Plot a histogram of survival estimates across years and reaches — plotSurvivalHistogram","text":"Plot histogram survival estimates across years reaches","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotSurvivalHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a histogram of survival estimates across years and reaches — plotSurvivalHistogram","text":"","code":"plotSurvivalHistogram(table, year = \"all\", reach = \"all\", title)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotSurvivalHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a histogram of survival estimates across years and reaches — plotSurvivalHistogram","text":"table table survival estimates, usually 'SurvivalTable' year numeric; subset years include histogram reach numeric; subset reach numbers include histogram title character; title pass ggtitle()","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/plotSurvivalHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a histogram of survival estimates across years and reaches — plotSurvivalHistogram","text":"ggplot object histogram","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/PointSetup.html","id":null,"dir":"Reference","previous_headings":"","what":"Point Setup and checking — PointSetup","title":"Point Setup and checking — PointSetup","text":"Checks point sf object appropriate crs, converts inputs sf object POINT geometry; mostly used internally check user inputs","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/PointSetup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Point Setup and checking — PointSetup","text":"","code":"PointSetup(point, crs)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/PointSetup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Point Setup and checking — PointSetup","text":"point sf, sfc, dataframe, vector containing geometry coordinates representing point crs crs apply point, sf sfc object","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/PointSetup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Point Setup and checking — PointSetup","text":"sf object POINT geometry","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/PruneNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Prunes a network based on various criteria — PruneNetwork","title":"Prunes a network based on various criteria — PruneNetwork","text":"New improved version prune network, handles larger variety inputs better implemented exclude match can used variety ways, function can sometimes handle time often better call function multiple times, using different arguments","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/PruneNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prunes a network based on various criteria — PruneNetwork","text":"","code":"PruneNetwork(network, root, exclude, match, tolerance = 100, plot = T)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/PruneNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prunes a network based on various criteria — PruneNetwork","text":"network sfnetwork pruned root sf point coordinates root exclude logical vector vector values exclude match sf object points lines tolerance tolerance matching points network plot logical, plot made","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/PruneNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prunes a network based on various criteria — PruneNetwork","text":"sfnetwork pruned specified","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/RiverMeasureLL.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","title":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","text":"tool take LINESTRING either returns coordinates based set river measures river measures based set given coordinates. Note single, unbranched LINESTRING used shape, may require calling function multiple times complex systems shape constructed right direction well (happen automatically using functions).","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/RiverMeasureLL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","text":"","code":"RiverMeasureLL(shape, measures, points, crs)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/RiverMeasureLL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","text":"shape sf LINESTRING corresponding stream measures vector river measures, units shape points dataframe coordinates sf object POINT geometries crs crs points","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/RiverMeasureLL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","text":"sf object POINT geometries matched coordinates river measure data","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/RootNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds or changes the root of a network — RootNetwork","title":"Adds or changes the root of a network — RootNetwork","text":"function sets root ensures nodes connected , preserves old data. nodes connected root removed. default, function root network closest existing node specified root. Set tolerance = 0 instead cause function create new node","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/RootNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds or changes the root of a network — RootNetwork","text":"","code":"RootNetwork(network, root, root.crs, tolerance = Inf)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/RootNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds or changes the root of a network — RootNetwork","text":"network sfnetwork root sf point, coordinates new root root.crs crs string root, different network tolerance distance determines whether use existing nodes blend new one","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/RootNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds or changes the root of a network — RootNetwork","text":"sfnetwork new root","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SetTemporalFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","title":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","text":"function takes streamvast object defines temporal sampling frame formats everything use vast","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SetTemporalFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","text":"","code":"SetTemporalFrame(   streamvast,   startdate = NA,   enddate = NA,   Time = \"Year\",   season,   padyear = F,   padhabitat = F )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/SetTemporalFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","text":"streamvast streamvast object, minimally countdata, reachdata defined startdate dates truncate expand data yyyy-mm-dd format enddate dates truncate expand data yyyy-mm-dd format Time character giving timescale use season integer vector length order start Month, start day, end month, end day 'year' 'season' padyear adds zeroes start end runyear padhabiat adds zeros regular intervals areas designated non-habitat","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SetTemporalFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","text":"streamvast object formated appropriate temporal frame","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SimplifyNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplifies a sfnetwork — SimplifyNetwork","title":"Simplifies a sfnetwork — SimplifyNetwork","text":"function removes extraneous nodes small segments network often leftover operations","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SimplifyNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplifies a sfnetwork — SimplifyNetwork","text":"","code":"SimplifyNetwork(   network,   root,   preserve,   preserve.type,   tolerance = 1000,   tolerance2 = 1,   makeplot = T )"},{"path":"https://jpharris7.github.io/StreamVAST/reference/SimplifyNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplifies a sfnetwork — SimplifyNetwork","text":"network sfnetwork root optional sf POINT input capatible RootNetwork; useful root gets removed preserve optional input specifies nodes segments altered preserve.type either \"nodes\" \"edges\", indicating component preserve referencing tolerance integer, segments connections size removed tolerance2 fine scale tolerance resolving overlapping edges; small makeplot funciton output plot showing /versions network","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SimplifyNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplifies a sfnetwork — SimplifyNetwork","text":"sfnetwork object","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SurvivalTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the results of a survival model in tabular form — SurvivalTable","title":"Summarize the results of a survival model in tabular form — SurvivalTable","text":"Summarize results survival model tabular form","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SurvivalTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the results of a survival model in tabular form — SurvivalTable","text":"","code":"SurvivalTable(model, extrayears)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/SurvivalTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the results of a survival model in tabular form — SurvivalTable","text":"model fitted INLA survival model extrayears years present data estimate desired","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/SurvivalTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the results of a survival model in tabular form — SurvivalTable","text":"adjacency matrix used INLA spatial relationships","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/VASTpreds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get density predictions from a VAST model — VASTpreds","title":"Get density predictions from a VAST model — VASTpreds","text":"function quickly constructs data frame VAST density predictions matched time space. also samples provides upper lower bounds (90%)","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/VASTpreds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get density predictions from a VAST model — VASTpreds","text":"","code":"VASTpreds(streamvast, newdata, makeauc = T, nsims = 100, bias.correct = F)"},{"path":"https://jpharris7.github.io/StreamVAST/reference/VASTpreds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get density predictions from a VAST model — VASTpreds","text":"streamvast VAST model object newdata data frame necessary columns make predictions makeauc logical; auc measures calculated. Can turn save time. nsims interger; number simulated draws make joint posterior bias.correct logical; poisson transformation bias corrected; slow","code":""},{"path":"https://jpharris7.github.io/StreamVAST/reference/VASTpreds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get density predictions from a VAST model — VASTpreds","text":"streamvast object dataframe predictions added","code":""}]
