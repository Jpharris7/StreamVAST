[{"path":"/articles/model_fitting.html","id":"important-note","dir":"Articles","previous_headings":"","what":"Important note","title":"Fitting a VAST Model","text":"new version VAST, tinyVAST, currently developed likely offer improved stability long term. Anticipate much chapter change code migrates use tinyVAST instead VAST.","code":""},{"path":"/articles/model_fitting.html","id":"fitting-a-vast-model-to-stream-network-data","dir":"Articles","previous_headings":"","what":"Fitting a VAST Model to Stream Network Data","title":"Fitting a VAST Model","text":"second chapter explaining use functions StreamVAST package. information prepare format data, please refer previous chapter Preparing Stream Network previous chapter, imported data steelhead salmon redds Mill Creek watershed, Washington State. two important data objects data frame dates locations redds, sf object LINESTRINGS defining different segments network. third object, set survey tracks also useful. Future versions package make use S3 classes streamline tracking objects.","code":"head(Mill.data) #>   X Year Day Reach   Effort Redds habitat  STRM_NAME  root parent #> 1 1 2013  64     1 2465.601     0    TRUE Mill Creek  TRUE     NA #> 2 2 2013  64     2 3499.699     0    TRUE Mill Creek FALSE      1 #> 3 3 2013  64     3 3354.350     0    TRUE Mill Creek FALSE      2 #> 4 4 2013  64     4 3354.350     0    TRUE Mill Creek FALSE      3 #> 5 5 2013  78     1 2465.601     0    TRUE Mill Creek  TRUE     NA #> 6 6 2013  78     2 3499.699     0    TRUE Mill Creek FALSE      1 #>   parent.distance #> 1              NA #> 2        3499.699 #> 3        3427.024 #> 4        3354.350 #> 5              NA #> 6        3499.699 print(Mill.reaches,n = 4) #> Simple feature collection with 22 features and 8 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 941970.7 ymin: 322499 xmax: 963147.4 ymax: 357159.5 #> Projected CRS: NAD83 / Washington South (ftUS) #> First 4 features: #>   from to habitat Reach    STRM_NA root parent  prnt_ds #> 1    1  2       1     1 Mill Creek    1     NA       NA #> 2    2  3       1     2 Mill Creek    0      1 3499.699 #> 3    3  4       1     3 Mill Creek    0      2 3427.024 #> 4    4  5       1     4 Mill Creek    0      3 3354.350 #>                         geometry #> 1 LINESTRING (963147.4 322499... #> 2 LINESTRING (961311.9 324437... #> 3 LINESTRING (958655.6 326211... #> 4 LINESTRING (958123.2 328790..."},{"path":"/articles/model_fitting.html","id":"additional-formatting-for-vast","dir":"Articles","previous_headings":"Fitting a VAST Model to Stream Network Data","what":"Additional formatting for VAST","title":"Fitting a VAST Model","text":"minor formatting tasks need completed can fit model. need draw information Mill.reaches add “Area” column tracks total area reach, separate “Effort”. date also converted variety formats (statistical week, Month) useful later. objects returned additional formating streamvast class object. object numerous elements gradually filled using additional functions. function also produces map spatial frame data coverage provided surveys can useful diagnostic check.  Vast requires specific formatting define spatial relationships along stream network, function calculates automatically. particular note, “reachname” argument. reachname used key unify different components, must consistent across datasets feed process. streamvast class also variety slots reserved model model outputs likely useful later steps. future steps, slots gradually filled , providing convenient structure storing large number outputs generated VAST.","code":"Mill.vast<-ConstructStreamVAST(countdata = Mill.data,reachdata = Mill.reaches,surveydata = Mill.surveys,reachname = \"Reach\",countname = \"Redds\") #> [1] \"Initializing StreamVAST based on countdata and reachdata\" #> [1] \"Converting length units to kilometers (Default)\""},{"path":"/articles/model_fitting.html","id":"choosing-a-temporal-resolution","dir":"Articles","previous_headings":"Fitting a VAST Model to Stream Network Data","what":"Choosing a temporal resolution","title":"Fitting a VAST Model","text":"Depending system modeled, variety temporal resolutions possible. second step define temporal resolution, determine overall structure vast model predictions. Use function “SetTemporalFrame” example, set temporal resolution two weeks, cover 5 months Feb. June. also pad ends data set zeros, mark ends season. function fills several slots Mill.vast object. first data frame contains everything need VAST. data frame three important additions. First, temporal element converted generic “Time” period runs sequence. also includes two columns “Original” “Dummy”. Original column identifies actual data points, Dummy column identifies time periods reaches data available, like model output prediction. second element list table useful relating time period back ’s normal calendar date.","code":"Mill.vast<-SetTemporalFrame(streamvast = Mill.vast,Time = \"Month\",                                   startdate = \"2013-02-01\",enddate = \"2022-06-30\",padzero = T) head(Mill.vast$vastdata) #>   Time Year Day Month Reach vastid Redds Density     Area    Effort      Lat #> 1    2 2013  64   Mar     1      1     0       0 1.066710 0.7515168 46.19086 #> 2    2 2013  64   Mar     2      2     0       0 1.066710 1.0667105 46.19420 #> 3    2 2013  64   Mar     3      3     0       0 1.022408 1.0224078 46.19933 #> 4    2 2013  64   Mar     4      4     0       0 1.022408 1.0224078 46.20602 #> 5    2 2013  78   Mar     1      1     0       0 1.066710 0.7515168 46.19086 #> 6    2 2013  78   Mar     2      2     0       0 1.066710 1.0667105 46.19420 #>         Lon original dummy #> 1 -123.1760     TRUE FALSE #> 2 -123.1866     TRUE FALSE #> 3 -123.1954     TRUE FALSE #> 4 -123.1992     TRUE FALSE #> 5 -123.1760     TRUE FALSE #> 6 -123.1866     TRUE FALSE head(Mill.vast$timetable) #>   Time Month Year    Key    Refdate Day Original #> 1    1     2 2013 2013-2 2013-02-15  46    FALSE #> 2    2     3 2013 2013-3 2013-03-15  74     TRUE #> 3    3     4 2013 2013-4 2013-04-15 105     TRUE #> 4    4     5 2013 2013-5 2013-05-15 135     TRUE #> 5    5     6 2013 2013-6 2013-06-15 166    FALSE #> 6    6     2 2014 2014-2 2014-02-15  46     TRUE"},{"path":"/articles/model_fitting.html","id":"covariates","dir":"Articles","previous_headings":"Fitting a VAST Model to Stream Network Data","what":"Covariates","title":"Fitting a VAST Model","text":"analysis plans make use covariates, now best time set . , add existing streamvast object using SetVASTCovariates function. VAST capable supporting wide variety model structures part somewhat complex. show example add statistical (julian) day covariate spline simulate seasonal associations redd abundance. simplest way add covariates supply dataframe matches vastdata slot “covariatedata” argument. Alternately, “spcovars” argument can used supply covariates match specific reaches constant across time, elevation slope. “tempcovars” argument similar covariates constant across space given time, large scale weather patterns. VAST structured hurdle model can different covariate structures probability density components. example include probability component (“pform”), leaving density component . formula can include variety elements polynomials splines. VAST also capable calculating spatially varying covariate effects, specified using “pconfig” argument. argument must matrix columns equal total number coefficients estimated, case 5. See ?VAST::make_data details. Lastly, computational reasons, also recommended covariate values centered zero scaled standard deviation 1.","code":"Mill.vast<-SetVastCovariates(streamvast = Mill.vast,covariatedata = Mill.vast$vastdata,pform = formula(~bs(Day,degree=5)),pconfig=matrix(nrow=1,ncol=5,data=1),center = T,scale = T)"},{"path":"/articles/model_fitting.html","id":"an-example-in-vast","dir":"Articles","previous_headings":"Fitting a VAST Model to Stream Network Data","what":"An example in VAST","title":"Fitting a VAST Model","text":"point, almost ready run model. VAST contains wide variety settings allow users effectively model different systems, first define settings object. streamvast can supply default settings run basic optimization routine test multiple options, option slow users encouraged familiarize VAST’s myriad options. See ?VAST::make_settings details. Novice users can copy code chunk reference. important specify Region = “stream_network”, set n_x equal number reaches. zone UTM time zone, purpose = “index2” specifies goal abundance density prediction. FieldConfig turns various components model (example removes several terms simplicity stability), RhoConfig specifies type autocorrelation (random-walk case). modeling overdispersion, settings set zero. ObsModel controls distributions link functions model, current setting indicating Poisson count model zero inflation. Anisotropy fine_scale turned . Please see VAST documentation details. also necessary manually set method “Stream_network” calculate mean size prediction frame. Next, can run model. preceding steps successful, “RunVAST” function look streamvast object settings object find necessary components.","code":"settings <- make_settings(Region=\"stream_network\",                           zone=10,                           purpose = \"index2\",                           fine_scale=F,                           n_x = nrow(Mill.vast$reachdata),                           FieldConfig = c(\"Omega1\"= 1, \"Epsilon1\" = 1, \"Omega2\" = 1, \"Epsilon2\" = 0),                            RhoConfig = c(\"Beta1\" = 2, \"Epsilon1\" = 2, \"Beta2\" = 2, \"Epsilon2\" = 0),                           OverdispersionConfig = c(\"Eta1\" = 0, \"Eta2\" = 0),                           ObsModel = c(7, 0),                           bias.correct = T,                           use_anisotropy = F) settings$Method<-\"Stream_network\"             settings$grid_size_km<-mean(Mill.vast$reachdata$Length) Mill.vast<- RunVAST(streamvast = Mill.vast,vastsettings = settings) #> Warning: package 'Matrix' was built under R version 4.2.3 #> Warning: package 'sp' was built under R version 4.2.3"},{"path":"/articles/model_fitting.html","id":"preliminary-checks-and-troubleshooting","dir":"Articles","previous_headings":"Fitting a VAST Model to Stream Network Data","what":"Preliminary checks and Troubleshooting","title":"Fitting a VAST Model","text":"outputs model can accessed Mill.vast$vastmodel, several useful determine algorithm run successfully. basic check parameter estimates often advisable. model converging, experiment settings. often productive begin simple model (inputting 0s FieldConfig RhoConfig) gradually increase complexity. Refer VAST documentation specifics. predictions fitted VAST model can quickly extracted using helper function VASTpreds. function format predictions data frame, provide density count estimates reach time period. also provides upper lower 90% confidence bounds, based samples drawn posterior distribution.  plots produced DHARMa package, provides scaled residual estimates hierarchical models, good first step assessing model fit. Note large amounts dummy data included, DHARMa plots can misleading. second functon can produce maps output.  maps can also faceted year, month, etc.  Additional maps can easily generated using generic plotting functions. instance, average density respect space stored “spacedata” slot. Similarly, pattern time stored “timedata.”","code":"Mill.vast$vastmodel$parameter_estimates$Convergence_check #> [1] \"There is no evidence that the model is not converged\" Mill.vast$vastmodel$parameter_estimates$AIC #> [1] 1222.029 #> attr(,\"logarithm\") #> [1] TRUE Mill.vast$vastmodel$parameter_estimates$number_of_coefficients #>  Total  Fixed Random  #>   1258     14   1244 Mill.vast<-VASTpreds(streamvast = Mill.vast) #> [1] \"Simulating predicted density distribution\" #> [1] \"Simulating predicted count distribution and residuals\" plotPredictionMap(streamvast = Mill.vast,mapvar = \"Density\",                   make.labels = F,xaxis.breaks = c(-123.24,-123.20)) plotPredictionMap(streamvast =Mill.vast, subset=Mill.vast$preds$Year%in%c(2014,2016,2018,2020), mapvar=\"Density\",facet = \"Year\",make.labels = F,xaxis.breaks = 0,yaxis.breaks = 0) ggplot(data=Mill.vast$spacedata)+   geom_point(aes(x=Reach,y=Density))+ggtitle(\"MAG - Average Density by Reach\")+   geom_line(aes(x=Reach,y=pDensity))+   geom_line(aes(x=Reach,y=pDensity_upper),linetype=3)+   geom_line(aes(x=Reach,y=pDensity_lower),linetype=3)+theme_bw() year.breaks<-aggregate(Mill.vast$timetable$Time,by=list(Mill.vast$timetable$Year),FUN=min)  ggplot(data=Mill.vast$timedata)+   geom_point(aes(x=Time,y=Density))+ggtitle(\"MAG - Average Density by Reach\")+   geom_line(aes(x=Time,y=pDensity))+   geom_line(aes(x=Time,y=pDensity_upper),linetype=3)+   geom_line(aes(x=Time,y=pDensity_lower),linetype=3)+theme_bw()+   scale_x_continuous(breaks = year.breaks$x,labels = year.breaks$Group.1)"},{"path":"/articles/shape_prep.html","id":"streamvast","dir":"Articles","previous_headings":"","what":"StreamVAST","title":"Preparing a Stream Network","text":"StreamVAST R package designed help users format data freshwater stream networks interface VAST package produce spatio-temporal models animal densities. package contains variety useful functions quickly processing complex stream networks usable form, attaching variety data network. makes extensive use sfnetworks package, users advised familiarize basics sfnetworks, particularly regarding activation extraction data. chapter covers steps necessary prepare stream shapes associated data. second chapter demonstrate data can used create spatio-temporal models using VAST.","code":""},{"path":"/articles/shape_prep.html","id":"example-steelhead-salmon-redds-in-mill-creek","dir":"Articles","previous_headings":"StreamVAST","what":"Example: Steelhead Salmon Redds in Mill Creek","title":"Preparing a Stream Network","text":"Mill Creek small watershed located east Longview, Washington home annual winter steelhead run February June. population assessed via counting number “redds” nests observed regular surveys spawning season. Redds recorded using GPS devices tracked successive surveys determine particular new observed previously.","code":""},{"path":"/articles/shape_prep.html","id":"converting-your-shape-into-a-network","dir":"Articles","previous_headings":"StreamVAST","what":"Converting your shape into a network","title":"Preparing a Stream Network","text":"shape generated using ARCGIS derived USGS surveys. However, formatted network. linestrings shapefile generally carry nodes intersections stream, confound distance path calculations. good first step convert sfnetwork. helper function package makes easy ensures transfer data fields. Note data fields may longer valid (.e. values long segment inherited new smaller segments), usually works well identifiers. stream network functionality VAST requires streams part continuous network single root loops multi-thread channels. results network every section (except root) single parent single distance parent. shape structured single root, simple function find return sf POINT object.  identifying root node crucial step, several functions exist may help: -FindRoots: returns nodes intersecting segment -LocateFeature: Allows user select node using command line graphics window -RootNetwork: Ensures segments ordered correctly (away root) removes unconnected features Last, remove multi-channel sections network. case, one. FixLoops function can help guiding user series command line prompts. vignette, jump past process. also sometimes convenient leave step later, next section “Simplifying network shape” may also fix problems.  final result identified sfnetworks “root tree spatially explicit edges” now satisfied assumptions necessary VAST.","code":"Mill.net<-Makesfnetwork(Mill.basin0) Mill.root<-LocateRoot(Mill.net) #> # A sfnetwork with 388 nodes and 387 edges #> # #> # CRS:  NAD83 / Washington South (ftUS)  #> # #> # A rooted tree with spatially explicit edges #> # #> # A tibble: 388 × 1 #> # ℹ 388 more rows #> # ℹ 1 variable: geometry <GEOMETRY [US_survey_foot]> #> # #> # A tibble: 387 × 20 #>    from    to LLID   LLIDSRC LENGTH STRM_NAME FEATURE SCALED REV_DATE Correction #>   <int> <int> <chr>  <chr>    <dbl> <chr>     <chr>    <dbl> <chr>         <dbl> #> 1     1     2 12326… 24K      2222. NA        WC           0 06-12-01          0 #> 2     3     4 12326… 24K      2017. NA        WC           0 06-12-01          0 #> 3     5     6 12326… 24K      1440. NA        WC           0 06-12-01          0 #> # ℹ 384 more rows #> # ℹ 10 more variables: RMflagMich <dbl>, RMFlag_FD <dbl>, TopHatch <dbl>, #> #   BanksMeas <dbl>, BanksMouth <dbl>, CrctMethod <chr>, LengthFlag <dbl>, #> #   Shape_Leng <dbl>, geometry <LINESTRING [US_survey_foot]>, loop <lgl>"},{"path":"/articles/shape_prep.html","id":"simplifing-a-network-or-shape","dir":"Articles","previous_headings":"StreamVAST","what":"Simplifing a network or shape","title":"Preparing a Stream Network","text":"basin contains many branches small steelhead spawn inhabit, common first step simplify shape. number options, use redd data extract parts network redds observed. options include using line work, identifiers network object match exclude sections.  figure shows original network black, locations redd observations blue, new stream network red. new network reflects areas necessary connect observations root. process often leaves unnecessary nodes place, general best remove stage, unless wish nodes preserved future steps. now clean set shapes stream network","code":"Mill.basin2<-PruneNetwork(network = Mill.basin, root = Mill.root,match = Mill.redds.sf,plot=F) Mill.basin3<-SimplifyNetwork(network = Mill.basin2,makeplot = F)"},{"path":"/articles/shape_prep.html","id":"defining-spatial-frame","dir":"Articles","previous_headings":"StreamVAST","what":"Defining spatial frame","title":"Preparing a Stream Network","text":"next step define spatial resolution stream network. dataset, observation discreet gps coordinates, must aggregated defined reaches VAST model. Future options allow users define spatial resolution complex ways, now assign prediction frames selecting target size. use target 1 km 3280 feet, though algorithm adjust value make evenly sized spaced stream reaches, respecting nodes network. process pruning assigning reaches typically removes data attached network, can reattach using simple function. case, attach one field. new reaches unlikely match old ones, numeric values reach based weighted average areas reach overlaps, whereas character factor values concatenated make new value. also run quick function check network valid structure also compute useful values, marking reachid parent, distance segments (measured midpoints)","code":"Mill.reaches<-AssignReaches(network = Mill.basin3,targetsize = 3280) #> [1] \"Using reach size of 3444\" Mill.reaches2<-AttachData(shape = st_as_sf(activate(Mill.reaches,\"edges\")),refshape = Mill.basin0,fields = \"STRM_NAME\") Mill.reaches3<-CheckNetwork(network=as_sfnetwork(Mill.reaches2),root=Mill.root)"},{"path":"/articles/shape_prep.html","id":"assemble-the-data","dir":"Articles","previous_headings":"StreamVAST","what":"Assemble the Data","title":"Preparing a Stream Network","text":"Now fully processed valid network, assigned reaches, time assemble data frame. example, data collected surveys cover segment stream can defined start end point. points used determine reaches observed date, extent reach observed recorded “effort”, become offset VAST model. Counts can computed survey level, distinct observations (redds). Surveys formatted sf object LINESTRING survey transect, LINESTRING reasonably close linework used network. package includes two functions can help construct necessary survey object: -MakeSurveyTracks: Uses start stop coordinates trace path along network -RiverMeasureLL: Converts river measures Lat/Lon, vice versa numerous surveys, function can time consuming Future versions expanded capabilities also handle data collected discreet points, dams weirs. final step combine spatial reaches, surveys, data. last function use survey tracks determine amount effort applied reach given date, become offset VAST model. Separately, also match observations survey, allows observed counts density reach date calculated used model. example, observation coordinates, total count survey can also used (case, function assumes observations evenly spaced, equivalent constant density surveyed area. Note large datasets, step may take several hours. next chapter, explore additional options formatting data use VAST, ensure necessary accessory objects dataframes ready VAST package functions.","code":"Mill.data<-AssembleReddData(shape = Mill.reaches3,georedds = Mill.redds,georedds.coords = c(\"lon\",\"lat\"),reddcrs = 2286,surveys = Mill.surveys) head(Mill.data) #>   Year Day Reach                    Effort Redds habitat  STRM_NAME  root #> 1 2013  64     1 2465.601 [US_survey_foot]     0    TRUE Mill Creek  TRUE #> 2 2013  64     2 3499.699 [US_survey_foot]     0    TRUE Mill Creek FALSE #> 3 2013  64     3 3354.350 [US_survey_foot]     0    TRUE Mill Creek FALSE #> 4 2013  64     4 3354.350 [US_survey_foot]     0    TRUE Mill Creek FALSE #> 5 2013  78     1 2465.601 [US_survey_foot]     0    TRUE Mill Creek  TRUE #> 6 2013  78     2 3499.699 [US_survey_foot]     0    TRUE Mill Creek FALSE #>   parent parent.distance #> 1     NA              NA #> 2      1        3499.699 #> 3      2        3427.024 #> 4      3        3354.350 #> 5     NA              NA #> 6      1        3499.699"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy Harris. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harris J (2024). StreamVAST: Tools using 'VAST' stream networks. R package version 0.0.0.9000, https://jpharris7.github.io/StreamVAST/.","code":"@Manual{,   title = {StreamVAST: Tools for using 'VAST' with stream networks},   author = {Jeremy Harris},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://jpharris7.github.io/StreamVAST/}, }"},{"path":"/index.html","id":"streamvast","dir":"","previous_headings":"","what":"Tools for using VAST with stream networks","title":"Tools for using VAST with stream networks","text":"R package modeling stream networks VAST","code":""},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Tools for using VAST with stream networks","text":"StreamVAST package aids users designing spatio-temporal models data collected stream networks. designed integrate easily VAST package, users need familiar VAST understand make full use features. working knowledge sfnetworks package also recommended. StreamVAST contains variety functions guide users converting linework sources valid network appropriate characteristics. User options selecting root node, pruning unnecessary branches, dividing network prediction frames, associating various data types network features. features assist generating objects needed VAST stream network functionality, assessing model fit, easily making various maps plots. package still early phases development, users expect frequent updates changes. ## Installation strongly recommended users first install VAST package dependencies. install StreamVAST, use code: doesn’t work, consider leaving vignettes, development.","code":"remotes::install_github(\"Jpharris7/StreamVAST\") remotes::install_github(\"Jpharris7/StreamVAST\", build_vignettes = FALSE)"},{"path":"/index.html","id":"shape-and-data-prep","dir":"","previous_headings":"","what":"Shape and Data Prep","title":"Tools for using VAST with stream networks","text":"section demonstrates format clean set lines, convert network, root network, remove unnecessary sections, associate various types data network. Preparing Stream Network","code":""},{"path":"/index.html","id":"formating-and-running-vast","dir":"","previous_headings":"","what":"Formating and Running VAST","title":"Tools for using VAST with stream networks","text":"section shows use network associated data produce model using VAST functions, provides basic advice choosing settings features. Fitting VAST Model ## Plots outputs tutorial section construction.","code":""},{"path":"/reference/AddFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Add nodes or edges to a sfnetwork — AddFeatures","title":"Add nodes or edges to a sfnetwork — AddFeatures","text":"function adds additional nodes edge segments network. adding anything, checks new features distinct pre-existing features, relatively close existing network. Note, function tested extensively.","code":""},{"path":"/reference/AddFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add nodes or edges to a sfnetwork — AddFeatures","text":"","code":"AddFeatures(network, nodes, edges, crs, tolerance = 200, tolerance2 = 10)"},{"path":"/reference/AddFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add nodes or edges to a sfnetwork — AddFeatures","text":"network sfnetwork object nodes data frame lon lat columns, sf object POINT geometry edges sf object LINESTRING geometry includes edges added crs crs object, nodes edges different crs network tolerance maximum distance snapping shape network, shapes outside tolerance removed tolerance2 maximum distance snapping nodes together, new nodes within tolerance distinct existing nodes","code":""},{"path":"/reference/AddFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add nodes or edges to a sfnetwork — AddFeatures","text":"sfnetwork indicated nodes added","code":""},{"path":"/reference/AssembleReddData.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"function takes sfnetwork sf shape, set surveys, optionally set georeferenced redds observations, returns data set effort assigned reach count types associated observation date.","code":""},{"path":"/reference/AssembleReddData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"","code":"AssembleReddData(   shape,   georedds = NA,   georedds.type = NA,   georedds.coords = NA,   reddcrs = \"wgs84\",   tolerance.redds = 250,   tolerance.surveys = 10,   surveys,   survey.redds = NA )"},{"path":"/reference/AssembleReddData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"shape sf object LINESTRING geometries, sfnetwork georedds optional dataframe coordinates redd observation georedds.type optional name column classification redds georedds.coords character vector column names lon/lat georedds reddcrs crs coordinates georedds tolerance.redds maximum distance snapping redds shape tolerance.surveys maximum distance snapping surveys shape (small) surveys sf object LINESTRINGs representing surveys survey.redds optional name column survey counts","code":""},{"path":"/reference/AssembleReddData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combines survey tracks, counts, and a network into a data frame — AssembleReddData","text":"dataframe dates, counts, effort surveyed location","code":""},{"path":"/reference/AssignReaches.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide a network into reaches — AssignReaches","title":"Divide a network into reaches — AssignReaches","text":"function takes network divides distinct reaches based target size want set boundaries, use setnodes set targetsize high setnodes argument can used ensure certain reach boundaries (implemented yet)","code":""},{"path":"/reference/AssignReaches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide a network into reaches — AssignReaches","text":"","code":"AssignReaches(network, targetsize = 100, habitat)"},{"path":"/reference/AssignReaches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divide a network into reaches — AssignReaches","text":"network sfnetwork targetsize desired size use reaches habitat logical vector identifies areas habitat (T) vs non-habitat (F)","code":""},{"path":"/reference/AssignReaches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divide a network into reaches — AssignReaches","text":"new sfnetwork object divided reaches approximately correct size","code":""},{"path":"/reference/AttachData.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach Data to a network — AttachData","title":"Attach Data to a network — AttachData","text":"Take data contained one sf LINESTRING object attaches network. Values averaged combined appropriate. Take care ID numbers coded data may appear numeric, meant combined averaged.","code":""},{"path":"/reference/AttachData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach Data to a network — AttachData","text":"","code":"AttachData(   shape,   refshape,   weight.type = 1,   fields = \"all\",   logical = F,   tolerance = 100 )"},{"path":"/reference/AttachData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach Data to a network — AttachData","text":"shape sfnetwork sf object LINESTRING geometry attach data refshape sf object LINESTRING geometry contains desired data weight.type interger indicating weight type used; see details fields character vector names columns attach, \"\" logical T/F determining handle logical values tolerance number used matching lines perfectly aligned","code":""},{"path":"/reference/AttachData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach Data to a network — AttachData","text":"sfnetwork consisting original shape data attached now","code":""},{"path":"/reference/CheckNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a network and correct common problems — CheckNetwork","title":"Check a network and correct common problems — CheckNetwork","text":"function checks direction stream network away root fixes problems, also adds column named \"parent\" shape distance midpoint parent midpoint child","code":""},{"path":"/reference/CheckNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a network and correct common problems — CheckNetwork","text":"","code":"CheckNetwork(network, root)"},{"path":"/reference/CheckNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a network and correct common problems — CheckNetwork","text":"network sfnetwork object root sf POINT vector coordinates root","code":""},{"path":"/reference/CheckNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a network and correct common problems — CheckNetwork","text":"sfnetwork additional data attached","code":""},{"path":"/reference/ConstructStreamVAST.html","id":null,"dir":"Reference","previous_headings":"","what":"ConstructStreamVAST\r\nThis function constructs objects with class ","title":"ConstructStreamVAST\r\nThis function constructs objects with class ","text":"ConstructStreamVAST function constructs objects class \"StreamVAST\". Depending arguments supplied, either initialize object countdata reachdata, add details already defined StreamVAST object.","code":""},{"path":"/reference/ConstructStreamVAST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ConstructStreamVAST\r\nThis function constructs objects with class ","text":"","code":"ConstructStreamVAST(   countdata,   reachdata,   surveydata,   vastdata,   vastmodel,   countname,   reachname,   timetable,   timescale,   timerange,   title,   stats,   preds,   eval,   spacedata,   timedata,   aucdata,   unitconv,   covariates )"},{"path":"/reference/ConstructStreamVAST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConstructStreamVAST\r\nThis function constructs objects with class ","text":"countdata dataframe containing count data, outputed AssembleReddData reachdata sf object data reaches, AssignReaches surveydata optional data frame sf object survey information, MakeSurveyTracks, much right now vastdata dataframe formatted specifically use VAST vastmodel fitted VAST model countname column name countdata use reachname column name reachdata use timetable dataframe converting timesteps dates timescale temporal resolution timerange length two vector start enddate temporal title title name stream system, use plotting stats list summary stats, like RMSE,AIC preds dataframe predictions VAST model eval limited dataframe evaluating model performance spacedata dataframe results aggregated spatial frame timedata dataframe results aggregated time frame aucdata dataframe Area Curve calculations derived model covariates list elements covariates StreamVAST StreamVAST object append details vastinput dataframe spatial information VAST, requires specific format vastnetwork dataframe spatial information VAST's stream functionality vastnetworkLL dataframe spatial information needed VAST's stream functionality vastsettings list settings used run vast model","code":""},{"path":"/reference/ConstructStreamVAST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ConstructStreamVAST\r\nThis function constructs objects with class ","text":"streamvast object appropriate formatting","code":""},{"path":"/reference/EditFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit a shape or network in real time — EditFeatures","title":"Edit a shape or network in real time — EditFeatures","text":"Allows user add points remove features selecting plot window command line prompts","code":""},{"path":"/reference/EditFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit a shape or network in real time — EditFeatures","text":"","code":"EditFeatures(shape, root)"},{"path":"/reference/EditFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit a shape or network in real time — EditFeatures","text":"shape sf sfnetworks object editted root sf POINT root (might obsolete)","code":""},{"path":"/reference/ExtractBasin.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts a basin or subbasin — ExtractBasin","title":"Extracts a basin or subbasin — ExtractBasin","text":"function takes shape extracts network node Note function preserve information associated original shapefile Future versions allow user specify information preserve, allow ","code":""},{"path":"/reference/ExtractBasin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts a basin or subbasin — ExtractBasin","text":"","code":"ExtractBasin(shape, root, basins, exclude, extract.inner = F)"},{"path":"/reference/ExtractBasin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts a basin or subbasin — ExtractBasin","text":"shape sf object consisting linestrings (multilinestrings!) root sf point, length 2 vector xy coordinates basins vector names sf feature indicating basin extracted exclude vector indexes dropped, attempt match single name extract.inner logical; nodes basins root extracted","code":""},{"path":"/reference/ExtractBasin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts a basin or subbasin — ExtractBasin","text":"sfnetwork containing specified subbasins","code":""},{"path":"/reference/FindRoots.html","id":null,"dir":"Reference","previous_headings":"","what":"FindRoots — FindRoots","title":"FindRoots — FindRoots","text":"function locates vertices connected shape specified mainstem","code":""},{"path":"/reference/FindRoots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FindRoots — FindRoots","text":"","code":"FindRoots(shape, mainstem = NA)"},{"path":"/reference/FindRoots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FindRoots — FindRoots","text":"shape sf object linestring geometry Identifier data mainstem name unique id mainstem basins branch ","code":""},{"path":"/reference/FindRoots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FindRoots — FindRoots","text":"sf object points potential root","code":""},{"path":"/reference/FixLoops.html","id":null,"dir":"Reference","previous_headings":"","what":"Guides the user in how to fix loops — FixLoops","title":"Guides the user in how to fix loops — FixLoops","text":"function guide user eliminating loops network using command line. Note vast, rooted tree required, reach can multiple parents","code":""},{"path":"/reference/FixLoops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guides the user in how to fix loops — FixLoops","text":"","code":"FixLoops(network, root, guides = NULL)"},{"path":"/reference/FixLoops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guides the user in how to fix loops — FixLoops","text":"network sfnetwork root sf object coordinates root guides optional list sf objects may assist decision making","code":""},{"path":"/reference/FixLoops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guides the user in how to fix loops — FixLoops","text":"sfnetwork user specified sections removed","code":""},{"path":"/reference/LocateFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate a feature on a shape or network — LocateFeature","title":"Locate a feature on a shape or network — LocateFeature","text":"Allows user select number shapes sf object network clicking plot window. shape converted sfnetwork first","code":""},{"path":"/reference/LocateFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate a feature on a shape or network — LocateFeature","text":"","code":"LocateFeature(shape, type)"},{"path":"/reference/LocateFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate a feature on a shape or network — LocateFeature","text":"shape sf object LINESTRING geometry sfnetwork type Either \"POINT\", \"VERTEX\" \"SEGMENT\" indicates type shape select","code":""},{"path":"/reference/LocateFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate a feature on a shape or network — LocateFeature","text":"sf object containing POINTS LINESTRINGS selected user","code":""},{"path":"/reference/LocateRoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate the root of a network — LocateRoot","title":"Locate the root of a network — LocateRoot","text":"Locates root network, assuming one. network unconnected nodes valid root, returns error","code":""},{"path":"/reference/LocateRoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate the root of a network — LocateRoot","text":"","code":"LocateRoot(network)"},{"path":"/reference/LocateRoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate the root of a network — LocateRoot","text":"network sf network object valid root","code":""},{"path":"/reference/LocateRoot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate the root of a network — LocateRoot","text":"sf object POINT geometry representing root network","code":""},{"path":"/reference/Makesfnetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a sf network — Makesfnetwork","title":"Make a sf network — Makesfnetwork","text":"function converts sf shape linestring multilinestring geometries sfnetwork object. Mostly, used internally.","code":""},{"path":"/reference/Makesfnetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a sf network — Makesfnetwork","text":"","code":"Makesfnetwork(shape, attach.data = T)"},{"path":"/reference/Makesfnetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a sf network — Makesfnetwork","text":"shape sf object LINESTRING MULTILINESTRING geometry attach.data Logical, whether data fields preserved","code":""},{"path":"/reference/Makesfnetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a sf network — Makesfnetwork","text":"sfnetwork object","code":""},{"path":"/reference/MakeSurveyTracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","title":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","text":"function uses coordinates locate start stop points survey draws line follows stream contours points. multiple paths available, choose shortest, best eliminate multichannel sections ahead time","code":""},{"path":"/reference/MakeSurveyTracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","text":"","code":"MakeSurveyTracks(   shape,   surveys,   surveys.crs = \"wgs84\",   save.col = \"all\",   maxdist = 25,   survey.coords = c(\"startlon\", \"startlat\", \"endlon\", \"endlat\") )"},{"path":"/reference/MakeSurveyTracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","text":"shape sf network sf object LINESTRING geometry surveys data frame coordinates desired information surveys.crs crs object code survey coordinates save.col character vector names columns save, \"\" maxdist maximum distance coordinates compared shape survey.coords vector names column numbers; order matters","code":""},{"path":"/reference/MakeSurveyTracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes sf LINESTRINGs representing survey transects — MakeSurveyTracks","text":"sf object LINESTRINGS data representing survey","code":""},{"path":"/reference/plotPredictionMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps, the desired data, with options for facetting — plotPredictionMap","title":"Maps, the desired data, with options for facetting — plotPredictionMap","text":"Maps, desired data, options facetting","code":""},{"path":"/reference/plotPredictionMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps, the desired data, with options for facetting — plotPredictionMap","text":"","code":"plotPredictionMap(   streamvast,   mapvar = \"Density\",   facet = NA,   FUN = \"mean\",   background,   subset,   make.labels = F,   xaxis.breaks = NA,   yaxis.breaks = NA,   palette = \"turbo\" )"},{"path":"/reference/plotPredictionMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps, the desired data, with options for facetting — plotPredictionMap","text":"streamvast streamvast object prediction data frame mapvar column data map facet column determine facets, vector values background sf object put background subset logical vector indicating pred values use make.labels reaches labelled, turn multiple years xaxis.breaks Vector x values axis lines; useful reduce crowding yaxis.breaks Vector y values axis lines; useful reduce crowding palette viridis color palette plotting","code":""},{"path":"/reference/plotPredictionMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maps, the desired data, with options for facetting — plotPredictionMap","text":"colored heatmap desired variable mapped stream network","code":""},{"path":"/reference/plotStream.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes a line plot that shows tributaries by stream distance — plotStream","title":"Makes a line plot that shows tributaries by stream distance — plotStream","text":"Makes line plot shows tributaries stream distance","code":""},{"path":"/reference/plotStream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes a line plot that shows tributaries by stream distance — plotStream","text":"","code":"plotStream(streamvast, plotvar, streamname, usepreds, main = NA)"},{"path":"/reference/plotStream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes a line plot that shows tributaries by stream distance — plotStream","text":"streamvast streamvast object predictions evaluations plotvar column name data plotted streamname column name reaches stream name usepreds logical, prediction evaluation data used, absent, function search main name mainstem important stream, highlighted","code":""},{"path":"/reference/plotStream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes a line plot that shows tributaries by stream distance — plotStream","text":"plot variable respect ot stream distance","code":""},{"path":"/reference/PointSetup.html","id":null,"dir":"Reference","previous_headings":"","what":"Point Setup and checking — PointSetup","title":"Point Setup and checking — PointSetup","text":"Checks point sf object appropriate crs, converts inputs sf object POINT geometry; mostly used internally check user inputs","code":""},{"path":"/reference/PointSetup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Point Setup and checking — PointSetup","text":"","code":"PointSetup(point, crs)"},{"path":"/reference/PointSetup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Point Setup and checking — PointSetup","text":"point sf, sfc, dataframe, vector containing geometry coordinates representing point crs crs apply point, sf sfc object","code":""},{"path":"/reference/PointSetup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Point Setup and checking — PointSetup","text":"sf object POINT geometry","code":""},{"path":"/reference/PruneNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Prunes a network based on various criteria — PruneNetwork","title":"Prunes a network based on various criteria — PruneNetwork","text":"New improved version prune network, handles larger variety inputs better implemented exclude match can used variety ways, function can sometimes handle time often better call function multiple times, using different arguments","code":""},{"path":"/reference/PruneNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prunes a network based on various criteria — PruneNetwork","text":"","code":"PruneNetwork(network, root, exclude, match, tolerance = 100, plot = T)"},{"path":"/reference/PruneNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prunes a network based on various criteria — PruneNetwork","text":"network sfnetwork pruned root sf point coordinates root exclude logical vector vector values exclude match sf object points lines tolerance tolerance matching points network plot logical, plot made","code":""},{"path":"/reference/PruneNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prunes a network based on various criteria — PruneNetwork","text":"sfnetwork pruned specified","code":""},{"path":"/reference/RiverMeasureLL.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","title":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","text":"tool take LINESTRING either returns coordinates based set river measures river measures based set given coordinates. Note single, unbranched LINESTRING used shape, may require calling function multiple times complex systems shape constructed right direction well (happen automatically using functions).","code":""},{"path":"/reference/RiverMeasureLL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","text":"","code":"RiverMeasureLL(shape, measures, points, crs)"},{"path":"/reference/RiverMeasureLL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","text":"shape sf LINESTRING corresponding stream measures vector river measures, units shape points dataframe coordinates sf object POINT geometries crs crs points","code":""},{"path":"/reference/RiverMeasureLL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts river measures and Lon/Lat coordinates — RiverMeasureLL","text":"sf object POINT geometries matched coordinates river measure data","code":""},{"path":"/reference/RootNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds or changes the root of a network — RootNetwork","title":"Adds or changes the root of a network — RootNetwork","text":"function sets root ensures nodes connected , preserves old data. nodes connected root removed. default, function root network closest existing node specified root. Set tolerance = 0 instead cause function create new node","code":""},{"path":"/reference/RootNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds or changes the root of a network — RootNetwork","text":"","code":"RootNetwork(network, root, tolerance = Inf)"},{"path":"/reference/RootNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds or changes the root of a network — RootNetwork","text":"network sfnetwork root sf point, coordinates new root tolerance distance determines whether use existing nodes blend new one","code":""},{"path":"/reference/RootNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds or changes the root of a network — RootNetwork","text":"sfnetwork new root","code":""},{"path":"/reference/RunVAST.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — RunVAST","title":"Title — RunVAST","text":"Title","code":""},{"path":"/reference/RunVAST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — RunVAST","text":"","code":"RunVAST(   streamvast,   vastsettings,   covariatedata,   covform.list,   optimize = T,   compute.stats = F,   maxiter = 3 )"},{"path":"/reference/RunVAST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — RunVAST","text":"streamvast streamvast object defined temporal frame vastsettings list settings vast model optimize logical, algorthim run multiple models varying settings maxiter maximum number iterations try giving ","code":""},{"path":"/reference/RunVAST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — RunVAST","text":"streamvast object fitted model attached","code":""},{"path":"/reference/SetTemporalFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","title":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","text":"function takes streamvast object defines temporal sampling frame formats everything use vast","code":""},{"path":"/reference/SetTemporalFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","text":"","code":"SetTemporalFrame(   streamvast,   startdate = NA,   enddate = NA,   padzero = T,   Time = \"Year\" )"},{"path":"/reference/SetTemporalFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","text":"streamvast streamvast object, minimally countdata, reachdata defined startdate dates truncate expand data yyyy-mm-dd format enddate dates truncate expand data yyyy-mm-dd format padzero survey zero observations added start/end dates Time character giving timescale use","code":""},{"path":"/reference/SetTemporalFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function takes a streamvast object defines a temporal sampling frame and formats everything for use with vast — SetTemporalFrame","text":"streamvast object formated appropriate temporal frame","code":""},{"path":"/reference/SetVastCovariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Add habitat covariates to a streamvast object — SetVastCovariates","title":"Add habitat covariates to a streamvast object — SetVastCovariates","text":"Add habitat covariates streamvast object","code":""},{"path":"/reference/SetVastCovariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add habitat covariates to a streamvast object — SetVastCovariates","text":"","code":"SetVastCovariates(   streamvast,   pform,   dform,   pconfig = NULL,   dconfig = NULL,   spcovars,   tempcovars,   covariatedata,   append = T,   center = T,   scale = T )"},{"path":"/reference/SetVastCovariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add habitat covariates to a streamvast object — SetVastCovariates","text":"streamvast streamvast object temporal spatial frames defined pform one-sided formula covariates affecting probability occurance dform one-sided formula covariates affecting density given presence pconfig data frame control values pform: See ?VAST::make_data details dconfig data frame control values dform: See ?VAST::make_data details spcovars dataframe sf object spatially referenced covariate data tempcovars dataframe temporally referenced covariate data covariatedata dataframe covariates matched vastdata append Logical; covariates appended pre-existing covariate data object center Logical; covariates centered mean value zero scale Logical; covariates scaled standard deviation one","code":""},{"path":"/reference/SetVastCovariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add habitat covariates to a streamvast object — SetVastCovariates","text":"streamvast object covariate features appropriately formatted","code":""},{"path":"/reference/SimplifyNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplifies a sfnetwork — SimplifyNetwork","title":"Simplifies a sfnetwork — SimplifyNetwork","text":"function removes extraneous nodes small segments network often leftover operations","code":""},{"path":"/reference/SimplifyNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplifies a sfnetwork — SimplifyNetwork","text":"","code":"SimplifyNetwork(   network,   root,   preserve,   preserve.type,   tolerance = 1000,   tolerance2 = 1,   makeplot = T )"},{"path":"/reference/SimplifyNetwork.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplifies a sfnetwork — SimplifyNetwork","text":"network sfnetwork root optional sf POINT input capatible RootNetwork; useful root gets removed preserve optional input specifies nodes segments altered preserve.type either \"nodes\" \"edges\", indicating component preserve referencing tolerance integer, segments connections size removed tolerance2 fine scale tolerance resolving overlapping edges; small makeplot funciton output plot showing /versions network","code":""},{"path":"/reference/SimplifyNetwork.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplifies a sfnetwork — SimplifyNetwork","text":"sfnetwork object","code":""},{"path":"/reference/VASTeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predictions matched to observations from a vast model. Fills in the evaluation data set, and adds some columns\r\nto the other slots. — VASTeval","title":"Get predictions matched to observations from a vast model. Fills in the evaluation data set, and adds some columns\r\nto the other slots. — VASTeval","text":"Get predictions matched observations vast model. Fills evaluation data set, adds columns slots.","code":""},{"path":"/reference/VASTeval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predictions matched to observations from a vast model. Fills in the evaluation data set, and adds some columns\r\nto the other slots. — VASTeval","text":"","code":"VASTeval(streamvast)"},{"path":"/reference/VASTeval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predictions matched to observations from a vast model. Fills in the evaluation data set, and adds some columns\r\nto the other slots. — VASTeval","text":"streamvast VAST model object","code":""},{"path":"/reference/VASTeval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predictions matched to observations from a vast model. Fills in the evaluation data set, and adds some columns\r\nto the other slots. — VASTeval","text":"streamvast object evaluation data set included","code":""},{"path":"/reference/VASTpreds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get density predictions from a VAST model — VASTpreds","title":"Get density predictions from a VAST model — VASTpreds","text":"function quickly constructs data frame VAST density predictions matched time space. also samples provides upper lower bounds (90%)","code":""},{"path":"/reference/VASTpreds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get density predictions from a VAST model — VASTpreds","text":"","code":"VASTpreds(streamvast)"},{"path":"/reference/VASTpreds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get density predictions from a VAST model — VASTpreds","text":"streamvast VAST model object","code":""},{"path":"/reference/VASTpreds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get density predictions from a VAST model — VASTpreds","text":"streamvast object dataframe predictions added","code":""}]
